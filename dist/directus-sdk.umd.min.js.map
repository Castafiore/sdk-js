{"version":3,"sources":["webpack://DirectusSDK/webpack/universalModuleDefinition","webpack://DirectusSDK/webpack/bootstrap","webpack://DirectusSDK/./node_modules/axios/lib/utils.js","webpack://DirectusSDK/./src/utils/is.ts","webpack://DirectusSDK/./src/utils/invariant.ts","webpack://DirectusSDK/./src/utils/payload.ts","webpack://DirectusSDK/./src/Configuration.ts","webpack://DirectusSDK/./node_modules/axios/lib/helpers/bind.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/buildURL.js","webpack://DirectusSDK/./node_modules/axios/lib/cancel/isCancel.js","webpack://DirectusSDK/./node_modules/axios/lib/defaults.js","webpack://DirectusSDK/./node_modules/axios/lib/adapters/xhr.js","webpack://DirectusSDK/./node_modules/axios/lib/core/createError.js","webpack://DirectusSDK/./node_modules/axios/lib/core/mergeConfig.js","webpack://DirectusSDK/./node_modules/axios/lib/cancel/Cancel.js","webpack://DirectusSDK/./src/index.ts","webpack://DirectusSDK/./src/SDK.ts","webpack://DirectusSDK/./src/utils/collection.ts","webpack://DirectusSDK/./node_modules/base-64/base64.js","webpack://DirectusSDK/(webpack)/buildin/module.js","webpack://DirectusSDK/(webpack)/buildin/global.js","webpack://DirectusSDK/./src/API.ts","webpack://DirectusSDK/./node_modules/axios/index.js","webpack://DirectusSDK/./node_modules/axios/lib/axios.js","webpack://DirectusSDK/./node_modules/is-buffer/index.js","webpack://DirectusSDK/./node_modules/axios/lib/core/Axios.js","webpack://DirectusSDK/./node_modules/axios/lib/core/InterceptorManager.js","webpack://DirectusSDK/./node_modules/axios/lib/core/dispatchRequest.js","webpack://DirectusSDK/./node_modules/axios/lib/core/transformData.js","webpack://DirectusSDK/./node_modules/process/browser.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://DirectusSDK/./node_modules/axios/lib/core/settle.js","webpack://DirectusSDK/./node_modules/axios/lib/core/enhanceError.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/cookies.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/combineURLs.js","webpack://DirectusSDK/./node_modules/axios/lib/cancel/CancelToken.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/spread.js","webpack://DirectusSDK/./node_modules/qs/lib/stringify.js","webpack://DirectusSDK/./node_modules/qs/lib/utils.js","webpack://DirectusSDK/./node_modules/qs/lib/formats.js","webpack://DirectusSDK/./src/Authentication.ts","webpack://DirectusSDK/./src/ConcurrencyManager.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","deepMerge","extend","a","b","thisArg","trim","str","replace","isType","v","isNotNull","test","isFinite","isNaN","parseFloat","Function","isObjectOrEmpty","isArrayOrEmpty","invariant","condition","message","Error","base64","is_1","getPayload","token","split","payloadBase64","payloadDecoded","decode","payloadObject","JSON","parse","exp","Date","err","invariant_1","Configuration","initialConfig","storage","dehydratedConfig","Boolean","persist","dehydratedInitialConfiguration","project","defaults","tokenExpirationTime","internalConfiguration","__assign","partialUpdate","url","localExp","validate","update","config","hydrate","reset","deleteHydratedConfig","dehydrate","nativeValue","getItem","parsedConfig","props","setItem","stringify","removeItem","args","Array","apply","utils","encode","encodeURIComponent","params","paramsSerializer","serializedParams","parts","toISOString","push","join","hashmarkIndex","indexOf","slice","__CANCEL__","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","adapter","XMLHttpRequest","transformRequest","data","transformResponse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","settle","buildURL","parseHeaders","isURLSameOrigin","createError","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","Authorization","btoa","open","toUpperCase","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","cookies","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","code","error","config1","config2","prop","Cancel","Configuration_1","SDK_1","SDK","default","collection_1","payload_1","API_1","options","api","API","isLoggedIn","login","credentials","logout","refreshIfNeeded","refresh","requestPasswordReset","email","post","getActivity","getMyBookmarks","getCollectionPresets","getCollections","getCollection","collection","createCollection","updateCollection","patch","deleteCollection","delete","payload","all","filter[title][nnull]","filter[user][eq]","id","filter[role][eq]","role","filter[user][null]","values","user","concat","createCollectionPreset","updateCollectionPreset","primaryKey","deleteCollectionPreset","getInterfaces","getLayouts","getPages","getAllFields","getFields","getField","fieldName","createField","fieldInfo","updateField","updateFields","fieldsInfoOrFieldNames","deleteField","getFiles","getFile","fileName","files","uploadFiles","_this","concurrent","attach","xhr","res","detach","catch","updateItem","body","collectionBasePath","getCollectionItemPath","updateItems","createItem","createItems","getItems","deleteItem","deleteItems","primaryKeys","getMyListingPreferences","filter[collection][eq]","filter[role][null]","filter[title][null]","limit","sort","col","getPermissions","getMyPermissions","createPermissions","updatePermissions","getRelations","createRelation","updateRelation","getCollectionRelations","filter[collection_a][eq]","filter[collection_b][eq]","getItemRevisions","revert","revisionID","getRole","getRoles","updateRole","createRole","deleteRole","getSettings","getSettingsFields","getUsers","getUser","getMe","updateUser","updateDatabase","ping","serverInfo","projectInfo","getThirdPartyAuthProviders","DIRECTUS_COLLECTION_PREFIX","startsWith","substr","global","__WEBPACK_AMD_DEFINE_RESULT__","freeExports","freeGlobal","InvalidCharacterError","TABLE","REGEX_SPACE_CHARACTERS","input","String","padding","output","position","charCodeAt","charAt","bitStorage","bitCounter","fromCharCode","version","webpackPolyfill","deprecate","paths","children","g","axios_1","qsStringify","Authentication_1","ConcurrencyManager_1","concurrencyManager","Authentication","endpoint","put","noEnv","skipParseToJSON","baseURL","requestOptions","responseData","json","Axios","mergeConfig","createInstance","defaultConfig","context","instance","axios","instanceConfig","CancelToken","isCancel","promises","spread","constructor","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","getUri","handlers","use","eject","h","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","reason","fns","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizedName","isAxiosError","toJSON","description","number","lineNumber","columnNumber","stack","ignoreDuplicateOf","parsed","line","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","write","expires","path","domain","secure","cookie","toGMTString","match","RegExp","decodeURIComponent","remove","now","relativeURL","executor","TypeError","resolvePromise","source","callback","arr","formats","has","arrayPrefixGenerators","brackets","prefix","comma","indices","repeat","pushToArray","valueOrArray","toISO","addQueryPrefix","allowDots","charset","charsetSentinel","delimiter","encoder","encodeValuesOnly","formatter","formatters","serializeDate","date","skipNulls","strictNullHandling","generateArrayPrefix","filter","objKeys","keys","opts","format","normalizeStringifyOptions","arrayFormat","joined","hexTable","arrayToObject","plainObjects","assign","target","reduce","acc","combine","compact","refs","item","j","pop","compacted","compactQueue","decoder","strWithoutPlus","unescape","defaultEncoder","string","escape","$0","parseInt","out","isRegExp","allowPrototypes","mergeTarget","targetItem","percentTwenties","RFC1738","RFC3986","inject","includes","startInterval","getTime","refreshInterval","stopInterval","_a","timeDiff","onAutoRefreshSuccess","onAutoRefreshError","fireImmediately","setInterval","clearInterval","running","reqHandler","shiftInitial","queued","resolver","requestHandler","req","responseHandler","limitConcurrentRequestsTo"],"mappings":"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","file":"directus-sdk.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DirectusSDK\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DirectusSDK\"] = factory();\n\telse\n\t\troot[\"DirectusSDK\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","const isType = (t: string, v: any) => Object.prototype.toString.call(v) === `[object ${t}]`;\n/**\n * @internal\n */\nexport const isNotNull = (v: any) => v !== null && v !== undefined;\n/**\n * @internal\n */\nexport const isString = (v: any) => v && typeof v === \"string\" && /\\S/.test(v);\n/**\n * @internal\n */\nexport const isNumber = (v: any) => isType(\"Number\", v) && isFinite(v) && !isNaN(parseFloat(v));\n/**\n * @internal\n */\nexport const isFunction = (v: any) => v instanceof Function;\n/**\n * @internal\n */\nexport const isObjectOrEmpty = (v: any) => isType(\"Object\", v);\n/**\n * @internal\n */\nexport const isArrayOrEmpty = (v: any) => isType(\"Array\", v);\n/**\n * @internal\n */\nexport const isArray = (v: any) => (!isArrayOrEmpty(v) ? false : v.length > 0);\n/**\n * @internal\n */\nexport const isObject = (v: any) => {\n  if (!isObjectOrEmpty(v)) {\n    return false;\n  }\n\n  for (const key in v) {\n    if (Object.prototype.hasOwnProperty.call(v, key)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n","/**\n * Checks invariant violation against a condition, will throw an error if not fulfilled\n * @internal\n * @param {boolean} condition\n * @param {string} message\n */\nexport const invariant = (condition: boolean | null | undefined, message: string): void => {\n  if (!!condition === true) {\n    return;\n  }\n\n  throw new Error(`Invariant violation: ${message}`);\n};\n","import * as base64 from \"base-64\";\nimport { isNumber } from \"./is\";\n\n/**\n * Retrieves the payload from a JWT\n * @internal\n * @param  {String} token The JWT to retrieve the payload from\n * @return {Object}       The JWT payload\n */\nexport function getPayload<T extends object = object>(token: string): T {\n  if (!token || token.length < 0 || token.split(\".\").length <= 0) {\n    // no token or invalid token equals no payload\n    return {} as T;\n  }\n\n  try {\n    const payloadBase64 = token\n      .split(\".\")[1]\n      .replace(\"-\", \"+\")\n      .replace(\"_\", \"/\");\n    const payloadDecoded = base64.decode(payloadBase64);\n    const payloadObject = JSON.parse(payloadDecoded);\n\n    if (isNumber(payloadObject.exp)) {\n      payloadObject.exp = new Date(payloadObject.exp * 1000);\n    }\n\n    return payloadObject;\n  } catch (err) {\n    // return empty payload in case of an error\n    return {} as T;\n  }\n}\n","import { invariant } from \"./utils/invariant\";\nimport { isString } from \"./utils/is\";\n\nconst STORAGE_KEY = \"directus-sdk-js\";\n\n// defining needed methods for the abstract storage adapter\nexport interface IStorageAPI {\n  getItem<T extends any = any>(key: string): T;\n  setItem(key: string, value: any): void;\n  removeItem(key: string): void;\n}\n\n// configuration merged with defaults\nexport interface IConfigurationValues {\n  url: string;\n  project: string;\n  token?: string;\n  localExp?: number;\n  tokenExpirationTime?: number;\n  persist: boolean;\n}\n\nexport interface IConfiguration {\n  token: string;\n  url: string;\n  project: string;\n  localExp?: number;\n  tokenExpirationTime: number;\n  persist: boolean;\n  dehydrate(): IConfigurationValues;\n  deleteHydratedConfig();\n  hydrate(config: IConfigurationValues);\n  partialUpdate(config: Partial<IConfigurationValues>): void;\n  reset(): void;\n  update(config: IConfigurationValues);\n}\n\n// default settings\nexport interface IConfigurationDefaults {\n  tokenExpirationTime: number;\n  project: string;\n}\n\n// constructor options\nexport interface IConfigurationOptions {\n  /**\n   * The URL of the direcuts CMS\n   */\n  url: string;\n  /**\n   * The token to authenticate if preferred\n   */\n  token?: string;\n  /**\n   * Project namespace\n   */\n  project?: string;\n  /**\n   * Default login expiration as number in ms\n   */\n  localExp?: number;\n  /**\n   * If the token should be persitated or rehydrated\n   */\n  persist?: boolean;\n  /**\n   * Auto token expiration time\n   */\n  tokenExpirationTime?: number;\n}\n\n/**\n * Configuration holder for directus implementations\n * @author Jan Biasi <biasijan@gmail.com>\n */\nexport class Configuration implements IConfiguration {\n  /**\n   * Defaults for all directus sdk instances, can be modified if preferred\n   * @type {IConfigurationDefaults}\n   */\n  public static defaults: IConfigurationDefaults = {\n    project: \"_\",\n    tokenExpirationTime: 5 * 6 * 1000,\n  };\n\n  /**\n   * Saves the internal configuration values, **DO NOT modify** from the outside\n   * @internal\n   */\n  private internalConfiguration: IConfigurationValues;\n\n  /**\n   * Creates a new configuration instance, will be used once for each directus instance (passing refs).\n   * @constructor\n   * @param {IConfigurationOptions} initialConfig   Initial configuration values\n   * @param {IStorageAPI?} storage                  Storage adapter for persistence\n   */\n  constructor(initialConfig: IConfigurationOptions = {} as any, private storage?: IStorageAPI) {\n    let dehydratedConfig: IConfigurationValues = {} as IConfigurationValues;\n\n    if (storage && Boolean(initialConfig && initialConfig.persist)) {\n      // dehydrate if storage was provided and persist flag is set\n      dehydratedConfig = this.dehydratedInitialConfiguration(storage);\n    }\n\n    const persist = Boolean(dehydratedConfig.persist || initialConfig.persist);\n    const project = dehydratedConfig.project || initialConfig.project || Configuration.defaults.project;\n    const tokenExpirationTime =\n      dehydratedConfig.tokenExpirationTime ||\n      initialConfig.tokenExpirationTime ||\n      Configuration.defaults.tokenExpirationTime;\n\n    this.internalConfiguration = {\n      ...initialConfig,\n      ...dehydratedConfig,\n      persist,\n      project,\n      tokenExpirationTime,\n    };\n  }\n\n  // ACCESSORS =================================================================\n\n  public get token(): string | undefined {\n    return this.internalConfiguration.token;\n  }\n\n  public set token(token: string) {\n    this.partialUpdate({ token });\n  }\n\n  public get tokenExpirationTime(): number | undefined {\n    return this.internalConfiguration.tokenExpirationTime;\n  }\n\n  public set tokenExpirationTime(tokenExpirationTime: number) {\n    // TODO: Optionally re-compute the localExp property for the auto-refresh\n    this.partialUpdate({\n      tokenExpirationTime: tokenExpirationTime * 60000,\n    });\n  }\n\n  public get url(): string {\n    return this.internalConfiguration.url;\n  }\n\n  public set url(url: string) {\n    this.partialUpdate({ url });\n  }\n\n  public get project(): string {\n    return this.internalConfiguration.project;\n  }\n\n  public set project(project: string) {\n    this.partialUpdate({\n      project: project || \"_\",\n    });\n  }\n\n  public get localExp(): number | undefined {\n    return this.internalConfiguration.localExp;\n  }\n\n  public set localExp(localExp: number | undefined) {\n    this.partialUpdate({ localExp });\n  }\n\n  public get persist(): boolean {\n    return this.internalConfiguration.persist;\n  }\n\n  public set persist(persist: boolean) {\n    this.internalConfiguration.persist = persist;\n  }\n\n  // HELPER METHODS ============================================================\n\n  /**\n   * Validates if the configuration is valid\n   * @throws {Error}\n   */\n  public validate() {\n    invariant(isString(this.url), \"configuration - url must be defined\");\n    invariant(isString(this.project), \"configuration - project must be defined\");\n    invariant(isString(this.token), \"configuration - project must be defined\");\n  }\n\n  /**\n   * Update the configuration values, will also hydrate them if persistance activated\n   * @param {IConfigurationValues} config\n   */\n  public update(config: IConfigurationValues): void {\n    this.internalConfiguration = config;\n\n    this.hydrate(config);\n  }\n\n  /**\n   * Update partials of the configuration, behaves like the [update] method\n   * @param {Partial<IConfigurationValues>} config\n   */\n  public partialUpdate(config: Partial<IConfigurationValues>): void {\n    this.internalConfiguration = {\n      ...this.internalConfiguration,\n      ...config,\n    };\n\n    this.hydrate(this.internalConfiguration);\n  }\n\n  /**\n   * Reset the whole confiugration and remove hydrated values from storage as well\n   */\n  public reset(): void {\n    delete this.internalConfiguration.token;\n    delete this.internalConfiguration.url;\n    delete this.internalConfiguration.localExp;\n\n    this.internalConfiguration.project = \"_\";\n\n    this.deleteHydratedConfig();\n  }\n\n  // STORAGE METHODS ===========================================================\n\n  public dehydrate(): IConfigurationValues | undefined {\n    if (!this.storage || !this.persist) {\n      return;\n    }\n\n    const nativeValue = this.storage.getItem(STORAGE_KEY);\n\n    if (!nativeValue) {\n      return;\n    }\n\n    const parsedConfig = JSON.parse(nativeValue);\n    this.internalConfiguration = parsedConfig;\n\n    return parsedConfig;\n  }\n\n  public hydrate(props: IConfigurationValues) {\n    if (!this.storage || !this.persist) {\n      return;\n    }\n\n    this.storage.setItem(STORAGE_KEY, JSON.stringify(props));\n  }\n\n  public deleteHydratedConfig(): void {\n    if (!this.storage || !this.persist) {\n      return;\n    }\n\n    this.storage.removeItem(STORAGE_KEY);\n  }\n\n  private dehydratedInitialConfiguration(storage: IStorageAPI): IConfigurationValues {\n    if (!storage) {\n      return {} as IConfigurationValues;\n    }\n\n    const nativeValue = storage.getItem(STORAGE_KEY);\n\n    if (!nativeValue) {\n      return;\n    }\n\n    try {\n      return JSON.parse(nativeValue);\n    } catch (err) {\n      return {} as IConfigurationValues;\n    }\n  }\n}\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  // Only Node.JS has a process variable that is of [[Class]] process\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach([\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength',\n    'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken',\n    'socketPath'\n  ], function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","import { Configuration } from \"./Configuration\";\nimport { SDK } from \"./SDK\";\n\nexport {\n  // export config for re-setting defaults across all SDK instances\n  Configuration,\n  // named exports is preferred, keep default for transition phase\n  SDK,\n};\n\n/**\n * @deprecated please use named imports instead of defaults\n */\nexport default SDK;\n","// General scheme types types\nimport { ILoginCredentials, ILoginOptions } from \"./schemes/auth/Login\";\nimport { BodyType } from \"./schemes/http/Body\";\nimport { QueryParams as QueryParamsType } from \"./schemes/http/Query\";\n\n// Directus scheme types\nimport { IField } from \"./schemes/directus/Field\";\nimport { IRelation } from \"./schemes/directus/Relation\";\nimport { IRole } from \"./schemes/directus/Role\";\nimport { ICollection } from \"./schemes/directus/Collection\";\nimport { ICollectionPreset } from \"./schemes/directus/CollectionPreset\";\nimport { IPermission } from \"./schemes/directus/Permission\";\nimport { IUser } from \"./schemes/directus/User\";\n\n// Request schemes\nimport { IUpdateCollectionPresetBody } from \"./schemes/request/Collection\";\n\n// Response schemes\nimport { IRelationsResponse } from \"./schemes/response/Relation\";\nimport { IActivityResponse } from \"./schemes/response/Activity\";\nimport { ICollectionResponse, ICollectionsResponse } from \"./schemes/response/Collection\";\nimport { ICollectionPresetResponse } from \"./schemes/response/CollectionPreset\";\nimport { IErrorResponse } from \"./schemes/response/Error\";\nimport { IFieldResponse, IFieldsResponse } from \"./schemes/response/Field\";\nimport { IFileResponse, IFilesResponse } from \"./schemes/response/File\";\nimport { IItemResponse, IItemsResponse } from \"./schemes/response/Item\";\nimport { ILoginResponse } from \"./schemes/response/Login\";\nimport { IRelationResponse } from \"./schemes/response/Relation\";\nimport { IRevisionResponse } from \"./schemes/response/Revision\";\nimport { IRoleResponse } from \"./schemes/response/Role\";\nimport { IRefreshTokenResponse } from \"./schemes/response/Token\";\nimport { IUserResponse, IUsersResponse } from \"./schemes/response/User\";\n\n// Utilities\nimport { getCollectionItemPath } from \"./utils/collection\";\nimport { getPayload } from \"./utils/payload\";\n\n// Manager classes\nimport { API, IAPI } from \"./API\";\nimport { Configuration, IConfiguration, IConfigurationOptions } from \"./Configuration\";\n\nimport { IServerInformationResponse } from \"./schemes/response/ServerInformation\";\nimport { ISettingsResponse } from \"./schemes/response/Setting\";\n\n// Utilities\nimport { invariant } from \"./utils/invariant\";\nimport { isArray, isNotNull, isNumber, isObject, isObjectOrEmpty, isString } from \"./utils/is\";\n\ntype PrimaryKeyType = string | number;\n\n/**\n * Main SDK implementation provides the public API to interact with a\n * remote directus instance.\n * @uses API\n * @uses Configuration\n */\nexport class SDK {\n  public get loggedIn(): boolean {\n    return this.api.auth.isLoggedIn();\n  }\n\n  public get payload(): any {\n    if (!this.config.token) {\n      return null;\n    }\n\n    return this.api.getPayload();\n  }\n\n  // convenience method\n  public static getPayload = getPayload;\n\n  // api connection and settings\n  public config: IConfiguration;\n  public api: IAPI;\n\n  // create a new instance with an API\n  constructor(options: IConfigurationOptions) {\n    this.config = new Configuration(options);\n    this.api = new API(this.config);\n  }\n\n  // #region authentication\n\n  /**\n   * Login to the API; Gets a new token from the API and stores it in this.api.token.\n   */\n  public login(credentials: ILoginCredentials, options?: ILoginOptions): Promise<ILoginResponse> {\n    return this.api.auth.login(credentials, options);\n  }\n\n  /**\n   * Logs the user out by \"forgetting\" the token, and clearing the refresh interval\n   */\n  public logout(): void {\n    this.api.auth.logout();\n  }\n\n  /**\n   * Resets the client instance by logging out and removing the URL and project\n   */\n  public reset(): void {\n    this.api.reset();\n  }\n\n  /**\n   * Refresh the token if it is about to expire (within 30 seconds of expiry date).\n   * - Calls onAutoRefreshSuccess with the new token if the refreshing is successful.\n   * - Calls onAutoRefreshError if refreshing the token fails for some reason.\n   * @returns {[boolean, Error?]}\n   */\n  public refreshIfNeeded(): Promise<[boolean, Error?]> {\n    return this.api.auth.refreshIfNeeded();\n  }\n\n  /**\n   * Use the passed token to request a new one\n   */\n  public refresh(token: string): Promise<IRefreshTokenResponse> {\n    return this.api.auth.refresh(token);\n  }\n\n  /**\n   * Request to reset the password of the user with the given email address.\n   * The API will send an email to the given email address with a link to generate a new\n   * temporary password.\n   */\n  public requestPasswordReset<TResponse extends any = any>(email: string): Promise<TResponse> {\n    invariant(isString(email), \"email must be a string\");\n\n    return this.api.post<TResponse>(\"/auth/password/request\", {\n      email,\n    });\n  }\n\n  // #endregion authentication\n\n  // #endregion collection presets\n\n  // #region activity\n\n  /**\n   * Get activity\n   */\n  public getActivity(params: QueryParamsType = {}): Promise<IActivityResponse> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IActivityResponse>(\"/activity\", params);\n  }\n\n  // #endregion activity\n\n  // #region bookmarks\n\n  /**\n   * Get the bookmarks of the current user\n   * @deprecated Will be removed in the next major version, please use {@link SDK.getCollectionPresets} instead\n   * @see https://docs.directus.io/advanced/legacy-upgrades.html#directus-bookmarks\n   */\n  public getMyBookmarks<TResponse extends any[] = any[]>(params: QueryParamsType = {}): Promise<TResponse> {\n    return this.getCollectionPresets<TResponse>(params);\n  }\n\n  // #endregion bookmarks\n\n  // #region collections\n\n  /**\n   * Get all available collections\n   */\n  public getCollections(params: QueryParamsType = {}): Promise<ICollectionsResponse[]> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<ICollectionsResponse[]>(\"/collections\", params);\n  }\n\n  /**\n   * Get collection info by name\n   */\n  public getCollection(collection: string, params: QueryParamsType = {}): Promise<ICollectionResponse> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<ICollectionResponse>(`/collections/${collection}`, params);\n  }\n\n  /**\n   * Create a collection\n   */\n  public createCollection(data: ICollection): Promise<ICollectionResponse> {\n    invariant(isObject(data), \"data must be an object\");\n    return this.api.post<ICollectionResponse>(\"/collections\", data);\n  }\n\n  /**\n   * Updates a certain collection\n   */\n  public updateCollection(collection: string, data: Partial<ICollection>): Promise<ICollectionResponse> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObject(data), \"data must be an object\");\n\n    return this.api.patch<ICollectionResponse>(`/collections/${collection}`, data);\n  }\n\n  /**\n   * Deletes a certain collection\n   */\n  public deleteCollection(collection: string): Promise<void> {\n    invariant(isString(collection), \"collection must be a string\");\n\n    return this.api.delete<void>(`/collections/${collection}`);\n  }\n\n  // #endregion collections\n\n  // #region collection presets\n\n  /**\n   * Get the collection presets of the current user\n   * @see https://docs.directus.io/api/reference.html#collection-presets\n   */\n  public getCollectionPresets<TResponse extends any[] = any[]>(params: QueryParamsType = {}): Promise<TResponse> {\n    invariant(isString(this.config.token), \"defined token is not a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const payload = this.api.getPayload<{ id: string; role: string }>();\n\n    return Promise.all([\n      this.api.get(\"/collection_presets\", {\n        \"filter[title][nnull]\": 1,\n        \"filter[user][eq]\": payload.id,\n      }),\n      this.api.get(\"/collection_presets\", {\n        \"filter[role][eq]\": payload.role,\n        \"filter[title][nnull]\": 1,\n        \"filter[user][null]\": 1,\n      }),\n    ]).then((values: Array<{ data: any }>) => {\n      const [user, role] = values;\n\n      return [...(user.data || []), ...(role.data || [])] as TResponse;\n    });\n  }\n\n  /**\n   * Create a new collection preset (bookmark / listing preferences)\n   * @see https://docs.directus.io/api/reference.html#collection-presets\n   */\n  public createCollectionPreset<CollectionPreset extends ICollectionPreset>(\n    data: CollectionPreset\n  ): Promise<ICollectionPresetResponse<CollectionPreset>> {\n    invariant(isObject(data), \"data must be an object\");\n\n    return this.api.post<ICollectionPresetResponse<CollectionPreset>>(\"/collection_presets\", data);\n  }\n\n  /**\n   * Update collection preset (bookmark / listing preference)\n   * @see https://docs.directus.io/api/reference.html#collection-presets\n   */\n  // tslint:disable-next-line: max-line-length\n  public updateCollectionPreset<\n    PartialCollectionPreset extends Partial<ICollectionPreset>,\n    TResultCollectionPreset extends ICollectionPreset = ICollectionPreset\n  >(\n    primaryKey: PrimaryKeyType,\n    data: IUpdateCollectionPresetBody\n  ): Promise<ICollectionPresetResponse<PartialCollectionPreset & TResultCollectionPreset>> {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObject(data), \"data must be an object\");\n\n    return this.api.patch<ICollectionPresetResponse<PartialCollectionPreset & TResultCollectionPreset>>(\n      `/collection_presets/${primaryKey}`,\n      data\n    );\n  }\n\n  /**\n   * Delete collection preset by primarykey\n   * @see https://docs.directus.io/api/reference.html#collection-presets\n   */\n  public deleteCollectionPreset(primaryKey: PrimaryKeyType): Promise<void> {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n\n    return this.api.delete<void>(`/collection_presets/${primaryKey}`);\n  }\n\n  // #endregion collection presets\n\n  // #region extensions\n\n  /**\n   * Get the information of all installed interfaces\n   * @see https://docs.directus.io/api/reference.html#get-extensions\n   */\n  public getInterfaces<TResponse extends any[] = any[]>(): Promise<TResponse> {\n    return this.api.request<TResponse>(\"get\", \"/interfaces\", {}, {}, true);\n  }\n\n  /**\n   * Get the information of all installed layouts\n   * @see https://docs.directus.io/api/reference.html#get-extensions\n   */\n  public getLayouts<TResponse extends any[] = any[]>(): Promise<TResponse> {\n    return this.api.request<TResponse>(\"get\", \"/layouts\", {}, {}, true);\n  }\n\n  /**\n   * Get the information of all installed pages\n   * @see https://docs.directus.io/api/reference.html#get-extensions\n   */\n  public getPages<TResponse extends any[] = any[]>(): Promise<TResponse> {\n    return this.api.request<TResponse>(\"get\", \"/pages\", {}, {}, true);\n  }\n\n  // #endregion extensions\n\n  // #region fields\n\n  /**\n   * Get all fields that are in Directus\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public getAllFields<TFieldsType extends IField[]>(\n    params: QueryParamsType = {}\n  ): Promise<IFieldsResponse<TFieldsType>> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IFieldsResponse<TFieldsType>>(\"/fields\", params);\n  }\n\n  /**\n   * Get the fields that have been setup for a given collection\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public getFields<TFieldsType extends IField[]>(\n    collection: string,\n    params: QueryParamsType = {}\n  ): Promise<IFieldsResponse<TFieldsType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IFieldsResponse<TFieldsType>>(`/fields/${collection}`, params);\n  }\n\n  /**\n   * Get the field information for a single given field\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public getField<TFieldType extends IField>(\n    collection: string,\n    fieldName: string,\n    params: QueryParamsType = {}\n  ): Promise<IFieldResponse<TFieldType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isString(fieldName), \"fieldName must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IFieldResponse<TFieldType>>(`/fields/${collection}/${fieldName}`, params);\n  }\n\n  /**\n   * Create a field in the given collection\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public createField<TFieldType extends IField>(\n    collection: string,\n    fieldInfo: TFieldType\n  ): Promise<IFieldResponse<TFieldType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObject(fieldInfo), \"fieldInfo must be an object\");\n\n    return this.api.post<IFieldResponse<TFieldType>>(`/fields/${collection}`, fieldInfo);\n  }\n\n  /**\n   * Update a given field in a given collection\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public updateField<TFieldType extends Partial<IField>>(\n    collection: string,\n    fieldName: string,\n    fieldInfo: TFieldType\n  ): Promise<IFieldResponse<IField & TFieldType> | undefined> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isString(fieldName), \"fieldName must be a string\");\n    invariant(isObject(fieldInfo), \"fieldInfo must be an object\");\n\n    return this.api.patch<IFieldResponse<IField & TFieldType>>(`/fields/${collection}/${fieldName}`, fieldInfo);\n  }\n\n  /**\n   * Update multiple fields at once\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   * @example\n   *\n   * // Set multiple fields to the same value\n   * updateFields(\"projects\", [\"first_name\", \"last_name\", \"email\"], {\n   *   default_value: \"\"\n   * })\n   *\n   * // Set multiple fields to different values\n   * updateFields(\"projects\", [\n   *   {\n   *     id: 14,\n   *     sort: 1\n   *   },\n   *   {\n   *     id: 17,\n   *     sort: 2\n   *   },\n   *   {\n   *     id: 912,\n   *     sort: 3\n   *   }\n   * ])\n   */\n  public updateFields<TFieldsType extends IField[]>(\n    collection: string,\n    fields: Array<Partial<IField>>\n  ): Promise<IFieldsResponse<TFieldsType & IField[]> | undefined>;\n  public updateFields<TFieldsType extends IField[]>(\n    collection: string,\n    fields: string[],\n    fieldInfo: Partial<IField>\n  ): Promise<IFieldsResponse<TFieldsType & IField[]> | undefined>;\n  public updateFields<TFieldsType extends IField[]>(\n    collection: string,\n    fieldsInfoOrFieldNames: string[] | Array<Partial<IField>>,\n    fieldInfo: Partial<IField> | null = null\n  ): Promise<IFieldsResponse<TFieldsType & IField[]> | undefined> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isArray(fieldsInfoOrFieldNames), \"fieldsInfoOrFieldNames must be an array\");\n\n    if (fieldInfo) {\n      invariant(isObject(fieldInfo), \"fieldInfo must be an object\");\n    }\n\n    if (fieldInfo) {\n      return this.api.patch(`/fields/${collection}/${fieldsInfoOrFieldNames.join(\",\")}`, fieldInfo);\n    }\n\n    return this.api.patch(`/fields/${collection}`, fieldsInfoOrFieldNames);\n  }\n\n  /**\n   * Delete a field from a collection\n   * @see @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public deleteField(collection: string, fieldName: string): Promise<void> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isString(fieldName), \"fieldName must be a string\");\n\n    return this.api.delete(`/fields/${collection}/${fieldName}`);\n  }\n\n  // #endregion fields\n\n  // #region files\n\n  /**\n   * Get a list of available files from Directus\n   * @see https://docs.directus.io/api/reference.html#files\n   */\n  public async getFiles(params: QueryParamsType = {}): Promise<IFilesResponse> {\n    invariant(isObjectOrEmpty(params), \"Params must be an object\");\n    return this.api.get(\"/files\", params);\n  }\n\n  /**\n   * Get a certain file or certain file list from Directus\n   * @see https://docs.directus.io/api/reference.html#files\n   */\n  public async getFile<TFile extends string | string[]>(\n    fileName: TFile,\n    params: QueryParamsType = {}\n  ): Promise<TFile extends string ? IFileResponse : IFilesResponse> {\n    invariant(isString(fileName), \"FileName must be string\");\n    invariant(isObjectOrEmpty(params), \"Params must be an object\");\n    const files = typeof fileName === \"string\" ? fileName : (fileName as string[]).join(\",\");\n    return this.api.get(`/files/${files}`, params);\n  }\n\n  /**\n   * Upload multipart files in multipart/form-data\n   * @see https://docs.directus.io/api/reference.html#files\n   */\n  public uploadFiles<TResponse extends any = any[]>(\n    data: object, // TODO: fix type definition\n    onUploadProgress: () => object = () => ({})\n  ): Promise<TResponse> {\n    const headers = {\n      Authorization: `Bearer ${this.config.token}`,\n      \"Content-Type\": \"multipart/form-data\",\n    };\n\n    // limit concurrent requests to 5\n    this.api.concurrent.attach(5);\n\n    return this.api.xhr\n      .post(`${this.config.url}/${this.config.project}/files`, data, {\n        headers,\n        onUploadProgress,\n      })\n      .then((res: { data: any }) => {\n        // detach concurrency manager\n        this.api.concurrent.detach();\n\n        return res.data;\n      })\n      .catch((error: IErrorResponse) => {\n        // detach concurrency manager\n        this.api.concurrent.detach();\n\n        if (error.response) {\n          throw error.response.data.error;\n        } else {\n          throw {\n            code: -1,\n            error,\n            message: \"Network Error\",\n          };\n        }\n      });\n  }\n\n  // #endregion files\n\n  // #region items\n\n  /**\n   * Update an existing item\n   * @see https://docs.directus.io/api/reference.html#update-item\n   * @typeparam TTPartialItem Defining the item type in object schema\n   * @typeparam TTResult Extension of [TPartialItem] as expected result\n   */\n  public updateItem<TTPartialItem extends object, TTResult extends object = TTPartialItem>(\n    collection: string,\n    primaryKey: PrimaryKeyType,\n    body: TTPartialItem,\n    params: QueryParamsType = {}\n  ): Promise<IItemResponse<TTPartialItem & TTResult>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObject(body), \"body must be an object\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.patch<IItemResponse<TTPartialItem & TTResult>>(`${collectionBasePath}/${primaryKey}`, body, params);\n  }\n\n  /**\n   * Update multiple items\n   * @see https://docs.directus.io/api/reference.html#update-items\n   * @typeparam TPartialItem Defining an array of items, each in object schema\n   * @typeparam TResult Extension of [TPartialItem] as expected result\n   * @return {Promise<IItemsResponse<TPartialItem & TResult>>}\n   */\n  public updateItems<TPartialItem extends object[], TResult extends TPartialItem = TPartialItem>(\n    collection: string,\n    body: TPartialItem,\n    params: QueryParamsType = {}\n  ) {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isArray(body), \"body must be an array\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.patch<IItemsResponse<TPartialItem & TResult>>(collectionBasePath, body, params);\n  }\n\n  /**\n   * Create a new item\n   * @typeparam TItemType Defining an item and its fields in object schema\n   * @return {Promise<IItemsResponse<TItemType>>}\n   */\n  public createItem<TItemType extends object>(collection: string, body: TItemType): Promise<IItemResponse<TItemType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObject(body), \"body must be an object\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.post<IItemResponse<TItemType>>(collectionBasePath, body);\n  }\n\n  /**\n   * Create multiple items\n   * @see https://docs.directus.io/api/reference.html#create-items\n   * @typeparam TItemsType Defining an array of items, each in object schema\n   */\n  public createItems<TItemsType extends Array<{}>>(\n    collection: string,\n    body: BodyType\n  ): Promise<IItemsResponse<TItemsType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isArray(body), \"body must be an array\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.post<IItemsResponse<TItemsType>>(collectionBasePath, body);\n  }\n\n  /**\n   * Get items from a given collection\n   * @see https://docs.directus.io/api/reference.html#get-multiple-items\n   * @typeparam TItemsType Defining an array of items, each in object schema\n   */\n  public getItems<TTItemsType extends Array<{}>>(\n    collection: string,\n    params: QueryParamsType = {}\n  ): Promise<IItemsResponse<TTItemsType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.get<IItemsResponse<TTItemsType>>(collectionBasePath, params);\n  }\n\n  /**\n   * Get a single item by primary key\n   * @see https://docs.directus.io/api/reference.html#get-item\n   * @typeparam TItemType Defining fields of an item in object schema\n   */\n  public getItem<TItemType extends object = {}>(\n    collection: string,\n    primaryKey: PrimaryKeyType,\n    params: QueryParamsType = {}\n  ): Promise<IItemResponse<TItemType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.get<IItemResponse<TItemType>>(`${collectionBasePath}/${primaryKey}`, params);\n  }\n\n  /**\n   * Delete a single item by primary key\n   * @see https://docs.directus.io/api/reference.html#delete-items\n   */\n  public deleteItem(collection: string, primaryKey: PrimaryKeyType) {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.delete<void>(`${collectionBasePath}/${primaryKey}`);\n  }\n\n  /**\n   * Delete multiple items by primary key\n   * @see https://docs.directus.io/api/reference.html#delete-items\n   */\n  public deleteItems(collection: string, primaryKeys: PrimaryKeyType[]) {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isArray(primaryKeys), \"primaryKeys must be an array\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.delete<void>(`${collectionBasePath}/${primaryKeys.join()}`);\n  }\n\n  // #endregion items\n\n  // #region listing preferences\n\n  /**\n   * Get the collection presets of the current user for a single collection\n   */\n  public getMyListingPreferences<TResponse extends any[] = any[]>(\n    collection: string,\n    params: QueryParamsType = {}\n  ): Promise<TResponse> {\n    invariant(isString(this.config.token), \"token must be defined\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const payload = this.api.getPayload<{ role: string; id: string }>();\n\n    return Promise.all([\n      this.api.get<IFieldResponse<any>>(\"/collection_presets\", {\n        \"filter[collection][eq]\": collection,\n        \"filter[role][null]\": 1,\n        \"filter[title][null]\": 1,\n        \"filter[user][null]\": 1,\n        limit: 1,\n        sort: \"-id\",\n      }),\n      this.api.get<IFieldResponse<any>>(\"/collection_presets\", {\n        \"filter[collection][eq]\": collection,\n        \"filter[role][eq]\": payload.role,\n        \"filter[title][null]\": 1,\n        \"filter[user][null]\": 1,\n        limit: 1,\n        sort: \"-id\",\n      }),\n      this.api.get<IFieldResponse<any>>(\"/collection_presets\", {\n        \"filter[collection][eq]\": collection,\n        \"filter[role][eq]\": payload.role,\n        \"filter[title][null]\": 1,\n        \"filter[user][eq]\": payload.id,\n        limit: 1,\n        sort: \"-id\",\n      }),\n    ]).then((values: Array<IFieldResponse<any>>) => {\n      const [col, role, user] = values;\n\n      if (user.data && user.data.length > 0) {\n        return user.data[0] as TResponse;\n      }\n\n      if (role.data && role.data.length > 0) {\n        return role.data[0] as TResponse;\n      }\n\n      if (col.data && col.data.length > 0) {\n        return col.data[0] as TResponse;\n      }\n\n      return {} as TResponse;\n    });\n  }\n\n  // #endregion listing preferences\n\n  // #region permissions\n\n  /**\n   * Get permissions\n   * @param {QueryParamsType?} params\n   * @return {Promise<IPermission>}\n   */\n  public getPermissions(params: QueryParamsType = {}): Promise<IItemsResponse<IPermission[]>> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.getItems<IPermission[]>(\"directus_permissions\", params);\n  }\n\n  /**\n   * TODO: Fix type-def for return\n   * Get the currently logged in user's permissions\n   * @typeparam TResponse Permissions type as array extending any[]\n   */\n  public getMyPermissions<TResponse extends any[] = any[]>(params: QueryParamsType = {}): Promise<TResponse> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get(\"/permissions/me\", params);\n  }\n\n  /**\n   * TODO: Fix type-def for param and return\n   * Create multiple new permissions\n   * @typeparam TResponse Permissions type as array extending any[]\n   */\n  public createPermissions<TResponse extends any[] = any[]>(data: any[]): Promise<TResponse> {\n    invariant(isArray(data), \"data must be anarry\");\n\n    return this.api.post(\"/permissions\", data);\n  }\n\n  /**\n   * TODO: Fix type-def for param and return\n   * Update multiple permission records\n   * @typeparam TResponse Permissions type as array extending any[]\n   */\n  public updatePermissions<TResponse extends any[] = any[]>(data: any[]): Promise<TResponse> {\n    invariant(isArray(data), \"data must be anarry\");\n\n    return this.api.patch<TResponse>(\"/permissions\", data);\n  }\n\n  // #endregion permissions\n\n  // #region relations\n\n  /**\n   * Get all relationships\n   * @param {QueryParamsType?} params\n   * @return {Promise<IRelationsResponse>}\n   */\n  public getRelations(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n    return this.api.get<IRelationsResponse>(\"/relations\", params);\n  }\n\n  /**\n   * Creates new relation\n   * @param {IRelation} data\n   * @return {Promise<IRelationResponse>}\n   */\n  public createRelation(data: IRelation) {\n    return this.api.post<IRelationResponse>(\"/relations\", data);\n  }\n\n  /**\n   * Updates existing relation\n   */\n  public updateRelation(primaryKey: PrimaryKeyType, data: Partial<IRelation>) {\n    return this.api.patch<IRelationResponse>(`/relations/${primaryKey}`, data);\n  }\n\n  /**\n   * TODO: Add type-def for return value(s)\n   * Get the relationship information for the given collection\n   */\n  public getCollectionRelations(collection: string, params: QueryParamsType = {}): Promise<any[]> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return Promise.all([\n      this.api.get<any>(\"/relations\", {\n        \"filter[collection_a][eq]\": collection,\n      }),\n      this.api.get<any>(\"/relations\", {\n        \"filter[collection_b][eq]\": collection,\n      }),\n    ]);\n  }\n\n  // #endregion relations\n\n  // #region revisions\n\n  /**\n   * Get a single item's revisions by primary key\n   * @typeparam DataAndDelta  The data including delta type for the revision\n   * @param {string} collection\n   * @param {PrimaryKeyType} primaryKey\n   * @param {QueryParamsType?} params\n   */\n  public getItemRevisions<TDataAndDelta extends object = {}>(\n    collection: string,\n    primaryKey: PrimaryKeyType,\n    params: QueryParamsType = {}\n  ): Promise<IRevisionResponse<TDataAndDelta>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.get<IRevisionResponse<TDataAndDelta>>(`${collectionBasePath}/${primaryKey}/revisions`, params);\n  }\n\n  /**\n   * Revert an item to a previous state\n   * @param {string} collection\n   * @param {PrimaryKeyType} primaryKey\n   * @param {number} revisionID\n   */\n  public revert(collection: string, primaryKey: PrimaryKeyType, revisionID: number): Promise<void> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isNumber(revisionID), \"revisionID must be a number\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.patch(`${collectionBasePath}/${primaryKey}/revert/${revisionID}`);\n  }\n\n  // #endregion revisions\n\n  // #region roles\n\n  /**\n   * Get a single user role\n   * @param {PrimaryKeyType} primaryKey\n   * @param {QueryParamsType?} params\n   */\n  public getRole(primaryKey: PrimaryKeyType, params: QueryParamsType = {}): Promise<IRoleResponse> {\n    invariant(isNumber(primaryKey), \"primaryKey must be a number\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IRoleResponse>(`/roles/${primaryKey}`, params);\n  }\n\n  /**\n   * Get the user roles\n   * @param {QueryParamsType?} params\n   */\n  public getRoles(params: QueryParamsType = {}): Promise<IRoleResponse[]> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IRoleResponse[]>(\"/roles\", params);\n  }\n\n  /**\n   * Update a user role\n   * @param {PrimaryKeyType} primaryKey\n   * @param {Role} body\n   */\n  public updateRole<Role extends Partial<IRole>>(primaryKey: PrimaryKeyType, body: Role) {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObject(body), \"body must be an object\");\n\n    return this.updateItem<Role, IRole>(\"directus_roles\", primaryKey, body);\n  }\n\n  /**\n   * Create a new user role\n   * @param {Role} body\n   */\n  public createRole<TRole extends IRole>(body: TRole) {\n    invariant(isObject(body), \"body must be an object\");\n\n    return this.createItem(\"directus_roles\", body);\n  }\n\n  /**\n   * Delete a user rol by primary key\n   * @param {PrimaryKeyType} primaryKey\n   */\n  public deleteRole(primaryKey: PrimaryKeyType): Promise<void> {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n\n    return this.deleteItem(\"directus_roles\", primaryKey);\n  }\n\n  // #endregion roles\n\n  // #region settings\n\n  /**\n   * Get Directus' global settings\n   * @param {QueryParamsType?} params\n   */\n  public getSettings(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<ISettingsResponse>(\"/settings\", params);\n  }\n\n  /**\n   * Get the \"fields\" for directus_settings\n   * @param {QueryParamsType?} params\n   */\n  public getSettingsFields(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IFieldsResponse>(\"/settings/fields\", params);\n  }\n\n  // #endregion settings\n\n  // #region users\n\n  /**\n   * Get a list of available users in Directus\n   * @param {QueryParamsType?} params\n   */\n  public getUsers(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IUsersResponse>(\"/users\", params);\n  }\n\n  /**\n   * Get a single Directus user\n   * @param {PrimaryKeyType} primaryKey\n   * @param {QueryParamsType?} params\n   */\n  public getUser<User extends IUser = IUser>(primaryKey: PrimaryKeyType, params: QueryParamsType = {}) {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IUserResponse<User>>(`/users/${primaryKey}`, params);\n  }\n\n  /**\n   * Get the user info of the currently logged in user\n   * @param {QueryParamsType?} params\n   */\n  public getMe<User extends IUser = IUser>(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IUserResponse<User>>(\"/users/me\", params);\n  }\n\n  /**\n   * Update a single user based on primaryKey\n   * @param {PrimaryKeyType} primaryKey\n   * @param {QueryParamsType?} params\n   */\n  public updateUser<User extends Partial<IUser>>(primaryKey: PrimaryKeyType, body: User) {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObject(body), \"body must be an object\");\n\n    return this.updateItem<User, IUser>(\"directus_users\", primaryKey, body);\n  }\n\n  // #endregion users\n\n  // #region server admin\n\n  /**\n   * This will update the database of the API instance to the latest version\n   * using the migrations in the API\n   * @return {Promise<void>}\n   */\n  public updateDatabase(): Promise<void> {\n    return this.api.post(\"/update\");\n  }\n\n  /**\n   * Ping the API to check if it exists / is up and running, returns \"pong\"\n   * @return {Promise<string>}\n   */\n  public ping(): Promise<string> {\n    return this.api.request(\"get\", \"/server/ping\", {}, {}, true, {}, true);\n  }\n\n  /**\n   * Get the server info from the API\n   * @return {Promise<IServerInformationResponse>}\n   */\n  public serverInfo(): Promise<IServerInformationResponse> {\n    return this.api.request(\"get\", \"/\", {}, {}, true);\n  }\n\n  /**\n   * TODO: Add response type-def\n   * Get the server info from the project\n   * @return {Promise<any>}\n   */\n  public projectInfo(): Promise<any> {\n    return this.api.request(\"get\", \"/\");\n  }\n\n  /**\n   * TODO: Add response type-def\n   * Get all the setup third party auth providers\n   * @return {Promise<any>}\n   */\n  public getThirdPartyAuthProviders(): Promise<any> {\n    return this.api.get(\"/auth/sso\");\n  }\n\n  // #endregion server admin\n}\n","export const DIRECTUS_COLLECTION_PREFIX = \"directus_\";\n\n/**\n * Returns the correct API path for the collection. It will\n * strip the prefix {@link DIRECTUS_COLLECTION_PREFIX | collection-prefix} or will add the\n * '/items/' path as prefix if not provided. The 'substr(9)' defines\n * the length of the defined {@link DIRECTUS_COLLECTION_PREFIX | collection-prefix}.\n * @param {string} collection     The name of the collection\n * @returns {string}\n * @internal\n *\n * @example\n * getCollectionItemPath('directus_users');\n * // => '/users'\n * getCollectionItemPath('users');\n * // => '/items/users'\n */\nexport function getCollectionItemPath(collection: string): string {\n  if (collection.startsWith(DIRECTUS_COLLECTION_PREFIX)) {\n    return `/${collection.substr(9)}`;\n  }\n\n  return `/items/${collection}`;\n}\n","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import axios, { AxiosInstance } from \"axios\";\nimport * as qsStringify from \"qs/lib/stringify\";\n\nimport { Authentication, IAuthentication } from \"./Authentication\";\nimport { concurrencyManager } from \"./ConcurrencyManager\";\nimport { IConfiguration } from \"./Configuration\";\n\n// Scheme types\nimport { BodyType } from \"./schemes/http/Body\";\nimport { RequestMethod } from \"./schemes/http/Request\";\nimport { IErrorResponse } from \"./schemes/response/Error\";\n\n// Utilities\nimport { invariant } from \"./utils/invariant\";\nimport { isArrayOrEmpty, isObjectOrEmpty, isString } from \"./utils/is\";\nimport { getPayload } from \"./utils/payload\";\n\nexport interface IAPI {\n  auth: IAuthentication;\n  xhr: AxiosInstance;\n  concurrent: ReturnType<typeof concurrencyManager>;\n  reset(): void;\n  get<T extends any = any>(endpoint: string, params?: object): Promise<T>;\n  post<T extends any = any>(endpoint: string, body?: BodyType, params?: object): Promise<T>;\n  patch<T extends any = any>(endpoint: string, body?: BodyType, params?: object): Promise<T>;\n  put<T extends any = any>(endpoint: string, body?: BodyType, params?: object): Promise<T>;\n  delete<T extends any = any>(endpoint: string): Promise<T>;\n  getPayload<T extends object = object>(): T;\n  request<T extends any = any>(\n    method: RequestMethod,\n    endpoint: string,\n    params?: object,\n    data?: object,\n    noEnv?: boolean,\n    headers?: { [key: string]: string },\n    skipParseToJSON?: boolean\n  ): Promise<T>;\n}\n\n/**\n * API definition for HTTP transactions\n * @uses Authentication\n * @uses axios\n * @author Jan Biasi <biasijan@gmail.com>\n */\nexport class API implements IAPI {\n  public auth: IAuthentication;\n  public xhr = axios.create({\n    paramsSerializer: qsStringify,\n    timeout: 10 * 60 * 1000, // 10 min\n  });\n  public concurrent = concurrencyManager(this.xhr, 10);\n\n  constructor(private config: IConfiguration) {\n    this.auth = new Authentication(config, {\n      post: this.post.bind(this),\n    });\n  }\n\n  /**\n   * Resets the client instance by logging out and removing the URL and project\n   */\n  public reset(): void {\n    this.auth.logout();\n    this.config.deleteHydratedConfig();\n  }\n\n  /// REQUEST METHODS ----------------------------------------------------------\n\n  /**\n   * GET convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public get<T extends any = any>(endpoint: string, params: object = {}): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.request(\"get\", endpoint, params);\n  }\n\n  /**\n   * POST convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public post<T extends any = any>(endpoint: string, body: BodyType = {}, params: object = {}): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(Array.isArray(body) ? isArrayOrEmpty(body) : isObjectOrEmpty(body), \"body must be an array or object\");\n\n    return this.request<T>(\"post\", endpoint, params, body);\n  }\n\n  /**\n   * PATCH convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public patch<T extends any = any>(endpoint: string, body: BodyType = {}, params: object = {}): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(Array.isArray(body) ? isArrayOrEmpty(body) : isObjectOrEmpty(body), \"body must be an array or object\");\n\n    return this.request<T>(\"patch\", endpoint, params, body);\n  }\n\n  /**\n   * PUT convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public put<T extends any = any>(endpoint: string, body: BodyType = {}, params: object = {}): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(Array.isArray(body) ? isArrayOrEmpty(body) : isObjectOrEmpty(body), \"body must be an array or object\");\n\n    return this.request<T>(\"put\", endpoint, params, body);\n  }\n\n  /**\n   * DELETE convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public delete<T extends any = any>(endpoint: string): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n\n    return this.request<T>(\"delete\", endpoint);\n  }\n\n  /**\n   * Gets the payload of the current token, return type can be generic\n   * @typeparam T   extends object, payload type\n   * @return {Promise<T>}\n   */\n  public getPayload<T extends object = object>(): T {\n    if (!isString(this.config.token)) {\n      return null;\n    }\n\n    return getPayload<T>(this.config.token);\n  }\n\n  /**\n   * Perform an API request to the Directus API\n   * @param {RequestMethod} method    Selected HTTP method\n   * @param {string} endpoint         Endpoint definition as path\n   * @param {object={}} params        Query parameters\n   * @param {object={}} data          Data passed to directus\n   * @param {boolean=false} noEnv     Do not include the `env` in the url (for system calls)\n   * @param {object={}} headers       Optional headers to include\n   * @param {boolean=false} skipParseToJSON  Whether to skip `JSON.parse` or not\n   * @typeparam T                     Response type definition, defaults to `any`\n   * @return {Promise<T>}\n   */\n  public request<T extends any = any>(\n    method: RequestMethod,\n    endpoint: string,\n    params: object = {},\n    data: object = {},\n    noEnv: boolean = false,\n    headers: { [key: string]: string } = {},\n    skipParseToJSON: boolean = false\n  ): Promise<T> {\n    invariant(isString(method), \"method must be a string\");\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n    invariant(isString(this.config.url), \"main url must be defined (see constructor)\");\n    invariant(Array.isArray(data) ? isArrayOrEmpty(data) : isObjectOrEmpty(data), \"data must be an array or object\");\n\n    let baseURL = `${this.config.url}/`;\n\n    if (noEnv === false) {\n      baseURL += `${this.config.project}/`;\n    }\n\n    const requestOptions = {\n      baseURL,\n      data,\n      headers,\n      method,\n      params,\n      url: endpoint,\n    };\n\n    if (this.config.token && isString(this.config.token) && this.config.token.length > 0) {\n      requestOptions.headers = headers;\n      requestOptions.headers.Authorization = `Bearer ${this.config.token}`;\n    }\n\n    return this.xhr\n      .request(requestOptions)\n      .then((res: { data: any }) => res.data)\n      .then((responseData: any) => {\n        if (!responseData || responseData.length === 0) {\n          return responseData;\n        }\n\n        if (typeof responseData !== \"object\") {\n          try {\n            return skipParseToJSON ? responseData : JSON.parse(responseData);\n          } catch (error) {\n            throw {\n              data: responseData,\n              error,\n              json: true,\n            };\n          }\n        }\n\n        return responseData as T;\n      })\n      .catch((error: IErrorResponse) => {\n        if (error.response) {\n          throw error.response.data.error;\n        } else if (error.json === true) {\n          throw {\n            code: -2,\n            data: error.data,\n            error: error.error,\n            message: \"API returned invalid JSON\",\n          };\n        } else {\n          throw {\n            code: -1,\n            error,\n            message: \"Network Error\",\n          };\n        }\n      });\n  }\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n  config.method = config.method ? config.method.toLowerCase() : 'get';\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","import { IConfiguration, IConfigurationValues } from \"./Configuration\";\n\n// Other classes\nimport { IAPI } from \"./API\";\n\n// Scheme types\nimport { IAuthenticateResponse } from \"./schemes/auth/Authenticate\";\nimport { ILoginCredentials, ILoginOptions } from \"./schemes/auth/Login\";\nimport { ILoginResponse, RefreshIfNeededResponse } from \"./schemes/response/Login\";\nimport { IRefreshTokenResponse } from \"./schemes/response/Token\";\n\n// Utilities\nimport { invariant } from \"./utils/invariant\";\nimport { isFunction, isObject, isString } from \"./utils/is\";\nimport { getPayload } from \"./utils/payload\";\n\ninterface IAuthenticationRefreshError {\n  code?: number;\n  message: string;\n}\n\ninterface IAuthenticationInjectableProps {\n  post: IAPI[\"post\"];\n}\n\nexport interface IAuthentication {\n  refreshInterval?: number;\n  isLoggedIn(): boolean;\n  login(credentials: ILoginCredentials, options?: ILoginOptions): Promise<ILoginResponse>;\n  logout(): void;\n  refreshIfNeeded(): Promise<[boolean, Error?]>;\n  refresh(token: string): Promise<IRefreshTokenResponse>;\n}\n\n/**\n * Handles all authentication related logic, decoupled from the core\n * @internal\n * @author Jan Biasi <biasijan@gmail.com>\n */\nexport class Authentication implements IAuthentication {\n  /**\n   * Current set auto-refresh interval or undefined\n   * @type {number|undefined}\n   */\n  public refreshInterval?: number;\n\n  /**\n   * Optional customized error handler\n   * @internal\n   */\n  private onAutoRefreshError?: (msg: IAuthenticationRefreshError) => void;\n\n  /**\n   * Optional customized success handler\n   * @internal\n   */\n  private onAutoRefreshSuccess?: (config: IConfigurationValues) => void;\n\n  /**\n   * Creates a new authentication instance\n   * @constructor\n   * @param {IConfiguration} config\n   * @param {IAuthenticationInjectableProps} inject\n   */\n  constructor(private config: IConfiguration, private inject: IAuthenticationInjectableProps) {\n    // Only start the auto refresh interval if the token exists and it's a JWT\n    if (config.token && config.token.includes(\".\")) {\n      this.startInterval(true);\n    }\n  }\n\n  /**\n   * If the current auth status is logged in\n   * @return {boolean}\n   */\n  public isLoggedIn(): boolean {\n    if (\n      isString(this.config.token) &&\n      isString(this.config.url) &&\n      isString(this.config.project) &&\n      isObject(this.getPayload())\n    ) {\n      if (this.config.localExp > Date.now()) {\n        // Not expired, succeed\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Login to the API; Gets a new token from the API and stores it in this.token.\n   * @param {ILoginCredentials} credentials   User login credentials\n   * @param {ILoginOptions?} options          Additional options regarding persistance and co.\n   * @return {Promise<ILoginResponse>}\n   */\n  public login(credentials: ILoginCredentials, options?: ILoginOptions): Promise<ILoginResponse> {\n    invariant(isObject(credentials), \"malformed credentials\");\n    invariant(\n      isString(credentials.email) && isString(credentials.password),\n      \"email & password are required in credentials\"\n    );\n\n    this.config.token = null;\n\n    if (isString(credentials.url)) {\n      this.config.url = credentials.url;\n    }\n\n    if (isString(credentials.project)) {\n      this.config.project = credentials.project;\n    }\n\n    if (credentials.persist || (options && options.persist) || this.config.persist) {\n      // use interval for login refresh when option persist enabled\n      this.startInterval();\n    }\n\n    return new Promise((resolve, reject) => {\n      this.inject\n        .post(\"/auth/authenticate\", {\n          email: credentials.email,\n          password: credentials.password,\n        })\n        .then((res: IAuthenticateResponse) => {\n          // save new token in configuration\n          return (this.config.token = res.data.token);\n        })\n        .then((token: string) => {\n          // expiry date is the moment we got the token + 5 minutes\n          this.config.localExp = new Date(Date.now() + this.config.tokenExpirationTime).getTime();\n\n          resolve({\n            localExp: this.config.localExp,\n            project: this.config.project,\n            token,\n            url: this.config.url,\n          });\n        })\n        .catch(reject);\n    });\n  }\n\n  /**\n   * Logs the user out by \"forgetting\" the token, and clearing the refresh interval\n   */\n  public logout(): void {\n    this.config.reset();\n\n    if (this.refreshInterval) {\n      this.stopInterval();\n    }\n  }\n\n  /// REFRESH METHODS ----------------------------------------------------------\n\n  /**\n   * Refresh the token if it is about to expire (within 30 seconds of expiry date).\n   * - Calls onAutoRefreshSuccess with the new token if the refreshing is successful.\n   * - Calls onAutoRefreshError if refreshing the token fails for some reason.\n   * @return {RefreshIfNeededResponse}\n   */\n  public refreshIfNeeded(): Promise<RefreshIfNeededResponse> {\n    const payload = this.getPayload<{ exp: any }>();\n    const { token, url, project, localExp } = this.config;\n\n    if (!isString(token) || !isString(url) || !isString(project)) {\n      return;\n    }\n\n    if (!payload || !payload.exp) {\n      return;\n    }\n\n    const timeDiff = (localExp || 0) - Date.now();\n\n    if (timeDiff <= 0) {\n      // token has expired, skipping auto refresh\n      if (isFunction(this.onAutoRefreshError)) {\n        this.onAutoRefreshError({\n          code: 102,\n          message: \"auth_expired_token\",\n        });\n      }\n      return;\n    }\n\n    if (timeDiff < 30000) {\n      return new Promise<RefreshIfNeededResponse>((resolve: (res: RefreshIfNeededResponse) => any) => {\n        this.refresh(token)\n          .then((res: IRefreshTokenResponse) => {\n            this.config.localExp = new Date(Date.now() + this.config.tokenExpirationTime).getTime();\n            this.config.token = res.data.token || token;\n\n            // if autorefresh succeeded\n            if (isFunction(this.onAutoRefreshSuccess)) {\n              this.onAutoRefreshSuccess(this.config);\n            }\n\n            resolve([true]);\n          })\n          .catch((error: Error) => {\n            if (isFunction(this.onAutoRefreshError)) {\n              this.onAutoRefreshError(error);\n            }\n\n            resolve([true, error]);\n          });\n      });\n    } else {\n      Promise.resolve([false]);\n    }\n  }\n\n  /**\n   * Use the passed token to request a new one.\n   * @param {string} token\n   */\n  public refresh(token: string): Promise<IRefreshTokenResponse> {\n    invariant(isString(token), \"token must be a string\");\n\n    return this.inject.post<IRefreshTokenResponse>(\"/auth/refresh\", { token });\n  }\n\n  /**\n   * Starts an interval of 10 seconds that will check if the token needs refreshing\n   * @param {boolean?} fireImmediately    If it should immediately call [refreshIfNeeded]\n   */\n  private startInterval(fireImmediately?: boolean): void {\n    if (fireImmediately) {\n      this.refreshIfNeeded();\n    }\n\n    this.refreshInterval = setInterval(this.refreshIfNeeded.bind(this), 10000) as any;\n  }\n\n  /**\n   * Clears and nullifies the token refreshing interval\n   */\n  private stopInterval(): void {\n    clearInterval(this.refreshInterval);\n    this.refreshInterval = null;\n  }\n\n  /**\n   * Gets the payload of the current token, return type can be generic\n   * @typeparam T     The payload response type, arbitrary object\n   * @return {T}\n   */\n  private getPayload<T extends object = object>(): T {\n    if (!isString(this.config.token)) {\n      return null;\n    }\n\n    return getPayload<T>(this.config.token);\n  }\n}\n","// tslint:disable: object-literal-sort-keys\nimport { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\n\nexport interface IConcurrencyQueueItem {\n  request: AxiosRequestConfig;\n  resolver: (queuedRequest: AxiosRequestConfig) => any;\n}\n\n/**\n * Handling and limiting concurrent requests for the API.\n * @param {AxiosInstance} axios   Reference to the caller instance\n * @param {number=10} limit       When to reate-limit outgoing requests\n * @author Jan Biasi <biasijan@gmail.com>\n */\nexport const concurrencyManager = (axios: AxiosInstance, limit: number = 10) => {\n  if (limit < 1) {\n    throw new Error(\"ConcurrencyManager Error: minimun concurrent requests is 1\");\n  }\n\n  const instance = {\n    limit,\n    queue: [] as IConcurrencyQueueItem[],\n    running: [] as IConcurrencyQueueItem[],\n    interceptors: {\n      request: null,\n      response: null,\n    },\n    push(reqHandler: IConcurrencyQueueItem) {\n      instance.queue.push(reqHandler);\n      instance.shiftInitial();\n    },\n    shiftInitial(): void {\n      setTimeout(() => {\n        if (instance.running.length < instance.limit) {\n          instance.shift();\n        }\n      }, 0);\n    },\n    shift(): void {\n      if (instance.queue.length) {\n        const queued = instance.queue.shift();\n\n        queued.resolver(queued.request);\n        instance.running.push(queued);\n      }\n    },\n    // use as interceptor. Queue outgoing requests\n    requestHandler(req: AxiosRequestConfig): Promise<AxiosRequestConfig> {\n      return new Promise(resolve => {\n        instance.push({\n          request: req,\n          resolver: resolve,\n        } as IConcurrencyQueueItem);\n      });\n    },\n    // use as interceptor. Execute queued request upon receiving a response\n    responseHandler(res: AxiosResponse<any>): AxiosResponse<any> {\n      instance.running.shift();\n      instance.shift();\n\n      return res;\n    },\n    detach(): void {\n      axios.interceptors.request.eject(instance.interceptors.request);\n      axios.interceptors.response.eject(instance.interceptors.response);\n    },\n    attach(limitConcurrentRequestsTo?: number): void {\n      if (limitConcurrentRequestsTo) {\n        instance.limit = limitConcurrentRequestsTo;\n      }\n\n      // queue concurrent requests\n      instance.interceptors.request = axios.interceptors.request.use(instance.requestHandler);\n      instance.interceptors.response = axios.interceptors.response.use(\n        instance.responseHandler,\n        instance.responseHandler\n      );\n    },\n  };\n\n  return instance;\n};\n"],"sourceRoot":""}