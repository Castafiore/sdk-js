{"version":3,"sources":["webpack://DirectusSDK/webpack/universalModuleDefinition","webpack://DirectusSDK/webpack/bootstrap","webpack://DirectusSDK/./node_modules/axios/lib/utils.js","webpack://DirectusSDK/./src/utils/is.ts","webpack://DirectusSDK/./src/utils/invariant.ts","webpack://DirectusSDK/./src/utils/payload.ts","webpack://DirectusSDK/./node_modules/axios/lib/defaults.js","webpack://DirectusSDK/./src/Configuration.ts","webpack://DirectusSDK/./node_modules/axios/lib/helpers/bind.js","webpack://DirectusSDK/./node_modules/axios/lib/adapters/xhr.js","webpack://DirectusSDK/./node_modules/axios/lib/core/createError.js","webpack://DirectusSDK/./node_modules/axios/lib/cancel/isCancel.js","webpack://DirectusSDK/./node_modules/axios/lib/cancel/Cancel.js","webpack://DirectusSDK/./src/index.ts","webpack://DirectusSDK/./src/SDK.ts","webpack://DirectusSDK/./src/utils/collection.ts","webpack://DirectusSDK/./node_modules/base-64/base64.js","webpack://DirectusSDK/(webpack)/buildin/module.js","webpack://DirectusSDK/(webpack)/buildin/global.js","webpack://DirectusSDK/./src/API.ts","webpack://DirectusSDK/./node_modules/axios/index.js","webpack://DirectusSDK/./node_modules/axios/lib/axios.js","webpack://DirectusSDK/./node_modules/is-buffer/index.js","webpack://DirectusSDK/./node_modules/axios/lib/core/Axios.js","webpack://DirectusSDK/./node_modules/process/browser.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://DirectusSDK/./node_modules/axios/lib/core/settle.js","webpack://DirectusSDK/./node_modules/axios/lib/core/enhanceError.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/buildURL.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/btoa.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/cookies.js","webpack://DirectusSDK/./node_modules/axios/lib/core/InterceptorManager.js","webpack://DirectusSDK/./node_modules/axios/lib/core/dispatchRequest.js","webpack://DirectusSDK/./node_modules/axios/lib/core/transformData.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/combineURLs.js","webpack://DirectusSDK/./node_modules/axios/lib/cancel/CancelToken.js","webpack://DirectusSDK/./node_modules/axios/lib/helpers/spread.js","webpack://DirectusSDK/./node_modules/qs/lib/stringify.js","webpack://DirectusSDK/./node_modules/qs/lib/utils.js","webpack://DirectusSDK/./node_modules/qs/lib/formats.js","webpack://DirectusSDK/./src/Authentication.ts","webpack://DirectusSDK/./src/ConcurrencyManager.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","isType","v","isNotNull","test","isFinite","isNaN","parseFloat","Function","isObjectOrEmpty","isArrayOrEmpty","invariant","condition","message","Error","base64","is_1","getPayload","token","split","payloadBase64","payloadDecoded","decode","payloadObject","JSON","parse","exp","Date","err","process","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","adapter","defaults","XMLHttpRequest","transformRequest","data","stringify","transformResponse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","invariant_1","Configuration","initialConfig","storage","dehydratedConfig","Boolean","persist","dehydratedInitialConfiguration","project","tokenExpirationTime","internalConfiguration","__assign","partialUpdate","url","localExp","validate","update","config","hydrate","reset","deleteHydratedConfig","dehydrate","nativeValue","getItem","parsedConfig","props","setItem","removeItem","args","Array","apply","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","Promise","resolve","reject","requestData","requestHeaders","request","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","auth","username","password","Authorization","open","toUpperCase","params","paramsSerializer","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","code","error","__CANCEL__","Cancel","Configuration_1","SDK_1","SDK","default","collection_1","payload_1","API_1","options","api","API","isLoggedIn","login","credentials","logout","refreshIfNeeded","refresh","requestPasswordReset","email","post","getActivity","getMyBookmarks","getCollectionPresets","getCollections","getCollection","collection","createCollection","updateCollection","patch","deleteCollection","delete","payload","all","filter[title][nnull]","filter[user][eq]","id","filter[role][eq]","role","filter[user][null]","values","user","concat","createCollectionPreset","updateCollectionPreset","primaryKey","deleteCollectionPreset","getInterfaces","getLayouts","getPages","getAllFields","getFields","getField","fieldName","createField","fieldInfo","updateField","updateFields","fieldsInfoOrFieldNames","join","deleteField","getFiles","getFile","fileName","files","uploadFiles","_this","concurrent","attach","xhr","res","detach","catch","updateItem","body","collectionBasePath","getCollectionItemPath","updateItems","createItem","createItems","getItems","deleteItem","deleteItems","primaryKeys","getMyListingPreferences","filter[collection][eq]","filter[role][null]","filter[title][null]","limit","sort","col","getPermissions","getMyPermissions","createPermissions","updatePermissions","getRelations","createRelation","updateRelation","getCollectionRelations","filter[collection_a][eq]","filter[collection_b][eq]","getItemRevisions","revert","revisionID","getRole","getRoles","updateRole","createRole","deleteRole","getSettings","getSettingsFields","getUsers","getUser","getMe","updateUser","updateDatabase","ping","serverInfo","projectInfo","getThirdPartyAuthProviders","DIRECTUS_COLLECTION_PREFIX","startsWith","substr","global","__WEBPACK_AMD_DEFINE_RESULT__","freeExports","freeGlobal","InvalidCharacterError","TABLE","REGEX_SPACE_CHARACTERS","encode","input","String","padding","output","position","charCodeAt","charAt","bitStorage","bitCounter","fromCharCode","version","webpackPolyfill","deprecate","paths","children","g","axios_1","qsStringify","Authentication_1","ConcurrencyManager_1","concurrencyManager","Authentication","endpoint","put","noEnv","skipParseToJSON","baseURL","requestOptions","responseData","json","Axios","createInstance","defaultConfig","context","instance","axios","instanceConfig","CancelToken","isCancel","promises","spread","constructor","readFloatLE","slice","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","push","shift","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizedName","encodeURIComponent","serializedParams","parts","toISOString","ignoreDuplicateOf","parsed","line","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","chars","E","block","charCode","idx","map","write","expires","path","domain","secure","cookie","toGMTString","match","RegExp","decodeURIComponent","remove","now","handlers","use","eject","h","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","reason","fns","relativeURL","executor","TypeError","resolvePromise","source","callback","arr","formats","has","arrayPrefixGenerators","brackets","prefix","comma","indices","repeat","pushToArray","valueOrArray","toISO","addQueryPrefix","allowDots","charset","charsetSentinel","delimiter","encoder","encodeValuesOnly","formatter","formatters","serializeDate","date","skipNulls","strictNullHandling","generateArrayPrefix","filter","objKeys","keys","opts","format","normalizeStringifyOptions","arrayFormat","joined","hexTable","arrayToObject","plainObjects","assign","target","reduce","acc","combine","compact","prop","refs","item","j","pop","compacted","compactQueue","decoder","strWithoutPlus","unescape","defaultEncoder","string","escape","$0","parseInt","out","isRegExp","allowPrototypes","mergeTarget","targetItem","percentTwenties","RFC1738","RFC3986","inject","includes","startInterval","getTime","refreshInterval","stopInterval","_a","timeDiff","onAutoRefreshSuccess","onAutoRefreshError","fireImmediately","setInterval","clearInterval","running","reqHandler","shiftInitial","queued","resolver","requestHandler","req","responseHandler","limitConcurrentRequestsTo"],"mappings":"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","file":"directus-sdk.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DirectusSDK\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DirectusSDK\"] = factory();\n\telse\n\t\troot[\"DirectusSDK\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","const isType = (t: string, v: any) => Object.prototype.toString.call(v) === `[object ${t}]`;\n/**\n * @internal\n */\nexport const isNotNull = (v: any) => v !== null && v !== undefined;\n/**\n * @internal\n */\nexport const isString = (v: any) => v && typeof v === \"string\" && /\\S/.test(v);\n/**\n * @internal\n */\nexport const isNumber = (v: any) => isType(\"Number\", v) && isFinite(v) && !isNaN(parseFloat(v));\n/**\n * @internal\n */\nexport const isFunction = (v: any) => v instanceof Function;\n/**\n * @internal\n */\nexport const isObjectOrEmpty = (v: any) => isType(\"Object\", v);\n/**\n * @internal\n */\nexport const isArrayOrEmpty = (v: any) => isType(\"Array\", v);\n/**\n * @internal\n */\nexport const isArray = (v: any) => (!isArrayOrEmpty(v) ? false : v.length > 0);\n/**\n * @internal\n */\nexport const isObject = (v: any) => {\n  if (!isObjectOrEmpty(v)) {\n    return false;\n  }\n\n  for (const key in v) {\n    if (Object.prototype.hasOwnProperty.call(v, key)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n","/**\n * Checks invariant violation against a condition, will throw an error if not fulfilled\n * @internal\n * @param {boolean} condition\n * @param {string} message\n */\nexport const invariant = (condition: boolean | null | undefined, message: string): void => {\n  if (!!condition === true) {\n    return;\n  }\n\n  throw new Error(`Invariant violation: ${message}`);\n};\n","import * as base64 from \"base-64\";\nimport { isNumber } from \"./is\";\n\n/**\n * Retrieves the payload from a JWT\n * @internal\n * @param  {String} token The JWT to retrieve the payload from\n * @return {Object}       The JWT payload\n */\nexport function getPayload<T extends object = object>(token: string): T {\n  if (!token || token.length < 0 || token.split(\".\").length <= 0) {\n    // no token or invalid token equals no payload\n    return {} as T;\n  }\n\n  try {\n    const payloadBase64 = token\n      .split(\".\")[1]\n      .replace(\"-\", \"+\")\n      .replace(\"_\", \"/\");\n    const payloadDecoded = base64.decode(payloadBase64);\n    const payloadObject = JSON.parse(payloadDecoded);\n\n    if (isNumber(payloadObject.exp)) {\n      payloadObject.exp = new Date(payloadObject.exp * 1000);\n    }\n\n    return payloadObject;\n  } catch (err) {\n    // return empty payload in case of an error\n    return {} as T;\n  }\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","import { invariant } from \"./utils/invariant\";\nimport { isString } from \"./utils/is\";\n\nconst STORAGE_KEY = \"directus-sdk-js\";\n\n// defining needed methods for the abstract storage adapter\nexport interface IStorageAPI {\n  getItem<T extends any = any>(key: string): T;\n  setItem(key: string, value: any): void;\n  removeItem(key: string): void;\n}\n\n// configuration merged with defaults\nexport interface IConfigurationValues {\n  url: string;\n  project: string;\n  token?: string;\n  localExp?: number;\n  tokenExpirationTime?: number;\n  persist: boolean;\n}\n\nexport interface IConfiguration {\n  token: string;\n  url: string;\n  project: string;\n  localExp?: number;\n  tokenExpirationTime: number;\n  persist: boolean;\n  dehydrate(): IConfigurationValues;\n  deleteHydratedConfig();\n  hydrate(config: IConfigurationValues);\n  partialUpdate(config: Partial<IConfigurationValues>): void;\n  reset(): void;\n  update(config: IConfigurationValues);\n}\n\n// default settings\nexport interface IConfigurationDefaults {\n  tokenExpirationTime: number;\n  project: string;\n}\n\n// constructor options\nexport interface IConfigurationOptions {\n  /**\n   * The URL of the direcuts CMS\n   */\n  url: string;\n  /**\n   * The token to authenticate if preferred\n   */\n  token?: string;\n  /**\n   * Project namespace\n   */\n  project?: string;\n  /**\n   * Default login expiration as number in ms\n   */\n  localExp?: number;\n  /**\n   * If the token should be persitated or rehydrated\n   */\n  persist?: boolean;\n  /**\n   * Auto token expiration time\n   */\n  tokenExpirationTime?: number;\n}\n\n/**\n * Configuration holder for directus implementations\n */\nexport class Configuration implements IConfiguration {\n  /**\n   * Defaults for all directus sdk instances, can be modified if preferred\n   * @type {IConfigurationDefaults}\n   */\n  public static defaults: IConfigurationDefaults = {\n    project: \"_\",\n    tokenExpirationTime: 5 * 6 * 1000,\n  };\n\n  /**\n   * Saves the internal configuration values, **DO NOT modify** from the outside\n   * @internal\n   */\n  private internalConfiguration: IConfigurationValues;\n\n  /**\n   * Creates a new configuration instance, will be used once for each directus instance (passing refs).\n   * @constructor\n   * @param {IConfigurationOptions} initialConfig   Initial configuration values\n   * @param {IStorageAPI?} storage                  Storage adapter for persistence\n   */\n  constructor(initialConfig: IConfigurationOptions = {} as any, private storage?: IStorageAPI) {\n    let dehydratedConfig: IConfigurationValues = {} as IConfigurationValues;\n\n    if (storage && Boolean(initialConfig && initialConfig.persist)) {\n      // dehydrate if storage was provided and persist flag is set\n      dehydratedConfig = this.dehydratedInitialConfiguration(storage);\n    }\n\n    const persist = Boolean(dehydratedConfig.persist || initialConfig.persist);\n    const project = dehydratedConfig.project || initialConfig.project || Configuration.defaults.project;\n    const tokenExpirationTime =\n      dehydratedConfig.tokenExpirationTime ||\n      initialConfig.tokenExpirationTime ||\n      Configuration.defaults.tokenExpirationTime;\n\n    this.internalConfiguration = {\n      ...initialConfig,\n      ...dehydratedConfig,\n      persist,\n      project,\n      tokenExpirationTime,\n    };\n  }\n\n  // ACCESSORS =================================================================\n\n  public get token(): string | undefined {\n    return this.internalConfiguration.token;\n  }\n\n  public set token(token: string) {\n    this.partialUpdate({ token });\n  }\n\n  public get tokenExpirationTime(): number | undefined {\n    return this.internalConfiguration.tokenExpirationTime;\n  }\n\n  public set tokenExpirationTime(tokenExpirationTime: number) {\n    // TODO: Optionally re-compute the localExp property for the auto-refresh\n    this.partialUpdate({\n      tokenExpirationTime: tokenExpirationTime * 60000,\n    });\n  }\n\n  public get url(): string {\n    return this.internalConfiguration.url;\n  }\n\n  public set url(url: string) {\n    this.partialUpdate({ url });\n  }\n\n  public get project(): string {\n    return this.internalConfiguration.project;\n  }\n\n  public set project(project: string) {\n    this.partialUpdate({\n      project: project || \"_\",\n    });\n  }\n\n  public get localExp(): number | undefined {\n    return this.internalConfiguration.localExp;\n  }\n\n  public set localExp(localExp: number | undefined) {\n    this.partialUpdate({ localExp });\n  }\n\n  public get persist(): boolean {\n    return this.internalConfiguration.persist;\n  }\n\n  public set persist(persist: boolean) {\n    this.internalConfiguration.persist = persist;\n  }\n\n  // HELPER METHODS ============================================================\n\n  /**\n   * Validates if the configuration is valid\n   * @throws {Error}\n   */\n  public validate() {\n    invariant(isString(this.url), \"configuration - url must be defined\");\n    invariant(isString(this.project), \"configuration - project must be defined\");\n    invariant(isString(this.token), \"configuration - project must be defined\");\n  }\n\n  /**\n   * Update the configuration values, will also hydrate them if persistance activated\n   * @param {IConfigurationValues} config\n   */\n  public update(config: IConfigurationValues): void {\n    this.internalConfiguration = config;\n\n    this.hydrate(config);\n  }\n\n  /**\n   * Update partials of the configuration, behaves like the [update] method\n   * @param {Partial<IConfigurationValues>} config\n   */\n  public partialUpdate(config: Partial<IConfigurationValues>): void {\n    this.internalConfiguration = {\n      ...this.internalConfiguration,\n      ...config,\n    };\n\n    this.hydrate(this.internalConfiguration);\n  }\n\n  /**\n   * Reset the whole confiugration and remove hydrated values from storage as well\n   */\n  public reset(): void {\n    delete this.internalConfiguration.token;\n    delete this.internalConfiguration.url;\n    delete this.internalConfiguration.localExp;\n\n    this.internalConfiguration.project = \"_\";\n\n    this.deleteHydratedConfig();\n  }\n\n  // STORAGE METHODS ===========================================================\n\n  public dehydrate(): IConfigurationValues | undefined {\n    if (!this.storage || !this.persist) {\n      return;\n    }\n\n    const nativeValue = this.storage.getItem(STORAGE_KEY);\n\n    if (!nativeValue) {\n      return;\n    }\n\n    const parsedConfig = JSON.parse(nativeValue);\n    this.internalConfiguration = parsedConfig;\n\n    return parsedConfig;\n  }\n\n  public hydrate(props: IConfigurationValues) {\n    if (!this.storage || !this.persist) {\n      return;\n    }\n\n    this.storage.setItem(STORAGE_KEY, JSON.stringify(props));\n  }\n\n  public deleteHydratedConfig(): void {\n    if (!this.storage || !this.persist) {\n      return;\n    }\n\n    this.storage.removeItem(STORAGE_KEY);\n  }\n\n  private dehydratedInitialConfiguration(storage: IStorageAPI): IConfigurationValues {\n    if (!storage) {\n      return {} as IConfigurationValues;\n    }\n\n    const nativeValue = storage.getItem(STORAGE_KEY);\n\n    if (!nativeValue) {\n      return;\n    }\n\n    try {\n      return JSON.parse(nativeValue);\n    } catch (err) {\n      return {} as IConfigurationValues;\n    }\n  }\n}\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","import { Configuration } from \"./Configuration\";\nimport { SDK } from \"./SDK\";\n\nexport {\n  // export config for re-setting defaults across all SDK instances\n  Configuration,\n  // named exports is preferred, keep default for transition phase\n  SDK,\n};\n\n/**\n * @deprecated please use named imports instead of defaults\n */\nexport default SDK;\n","// General scheme types types\nimport { ILoginCredentials, ILoginOptions } from \"./schemes/auth/Login\";\nimport { BodyType } from \"./schemes/http/Body\";\nimport { QueryParams as QueryParamsType } from \"./schemes/http/Query\";\n\n// Directus scheme types\nimport { IField } from \"schemes/directus/Field\";\nimport { IRelation } from \"schemes/directus/Relation\";\nimport { IRole } from \"schemes/directus/Role\";\nimport { ICollection } from \"./schemes/directus/Collection\";\nimport { ICollectionPreset } from \"./schemes/directus/CollectionPreset\";\nimport { IPermission } from \"./schemes/directus/Permission\";\nimport { IUser } from \"./schemes/directus/User\";\n\n// Request schemes\nimport { IUpdateCollectionPresetBody } from \"./schemes/request/Collection\";\n\n// Response schemes\nimport { IRelationsResponse } from \"schemes/response/Relation\";\nimport { IActivityResponse } from \"./schemes/response/Activity\";\nimport { ICollectionResponse, ICollectionsResponse } from \"./schemes/response/Collection\";\nimport { ICollectionPresetResponse } from \"./schemes/response/CollectionPreset\";\nimport { IErrorResponse } from \"./schemes/response/Error\";\nimport { IFieldResponse, IFieldsResponse } from \"./schemes/response/Field\";\nimport { IFileResponse, IFilesResponse } from \"./schemes/response/File\";\nimport { IItemResponse, IItemsResponse } from \"./schemes/response/Item\";\nimport { ILoginResponse } from \"./schemes/response/Login\";\nimport { IRelationResponse } from \"./schemes/response/Relation\";\nimport { IRevisionResponse } from \"./schemes/response/Revision\";\nimport { IRoleResponse } from \"./schemes/response/Role\";\nimport { IRefreshTokenResponse } from \"./schemes/response/Token\";\nimport { IUserResponse, IUsersResponse } from \"./schemes/response/User\";\n\n// Utilities\nimport { getCollectionItemPath } from \"./utils/collection\";\nimport { getPayload } from \"./utils/payload\";\n\n// Manager classes\nimport { API, IAPI } from \"./API\";\nimport { Configuration, IConfiguration, IConfigurationOptions } from \"./Configuration\";\n\nimport { IServerInformationResponse } from \"./schemes/response/ServerInformation\";\nimport { ISettingsResponse } from \"./schemes/response/Setting\";\n\n// Utilities\nimport { invariant } from \"./utils/invariant\";\nimport { isArray, isNotNull, isNumber, isObject, isObjectOrEmpty, isString } from \"./utils/is\";\n\ntype PrimaryKeyType = string | number;\n\n/**\n * Main SDK implementation provides the public API to interact with a\n * remote directus instance.\n * @uses API\n * @uses Configuration\n */\nexport class SDK {\n  public get loggedIn(): boolean {\n    return this.api.auth.isLoggedIn();\n  }\n\n  public get payload(): any {\n    if (!this.config.token) {\n      return null;\n    }\n\n    return this.api.getPayload();\n  }\n\n  // convenience method\n  public static getPayload = getPayload;\n\n  // api connection and settings\n  public config: IConfiguration;\n  public api: IAPI;\n\n  // create a new instance with an API\n  constructor(options: IConfigurationOptions) {\n    this.config = new Configuration(options);\n    this.api = new API(this.config);\n  }\n\n  // #region authentication\n\n  /**\n   * Login to the API; Gets a new token from the API and stores it in this.api.token.\n   */\n  public login(credentials: ILoginCredentials, options?: ILoginOptions): Promise<ILoginResponse> {\n    return this.api.auth.login(credentials, options);\n  }\n\n  /**\n   * Logs the user out by \"forgetting\" the token, and clearing the refresh interval\n   */\n  public logout(): void {\n    this.api.auth.logout();\n  }\n\n  /**\n   * Resets the client instance by logging out and removing the URL and project\n   */\n  public reset(): void {\n    this.api.reset();\n  }\n\n  /**\n   * Refresh the token if it is about to expire (within 30 seconds of expiry date).\n   * - Calls onAutoRefreshSuccess with the new token if the refreshing is successful.\n   * - Calls onAutoRefreshError if refreshing the token fails for some reason.\n   * @returns {[boolean, Error?]}\n   */\n  public refreshIfNeeded(): Promise<[boolean, Error?]> {\n    return this.api.auth.refreshIfNeeded();\n  }\n\n  /**\n   * Use the passed token to request a new one\n   */\n  public refresh(token: string): Promise<IRefreshTokenResponse> {\n    return this.api.auth.refresh(token);\n  }\n\n  /**\n   * Request to reset the password of the user with the given email address.\n   * The API will send an email to the given email address with a link to generate a new\n   * temporary password.\n   */\n  public requestPasswordReset<TResponse extends any = any>(email: string): Promise<TResponse> {\n    invariant(isString(email), \"email must be a string\");\n\n    return this.api.post<TResponse>(\"/auth/password/request\", {\n      email,\n    });\n  }\n\n  // #endregion authentication\n\n  // #endregion collection presets\n\n  // #region activity\n\n  /**\n   * Get activity\n   */\n  public getActivity(params: QueryParamsType = {}): Promise<IActivityResponse> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IActivityResponse>(\"/activity\", params);\n  }\n\n  // #endregion activity\n\n  // #region bookmarks\n\n  /**\n   * Get the bookmarks of the current user\n   * @deprecated Will be removed in the next major version, please use {@link SDK.getCollectionPresets} instead\n   * @see https://docs.directus.io/advanced/legacy-upgrades.html#directus-bookmarks\n   */\n  public getMyBookmarks<TResponse extends any[] = any[]>(params: QueryParamsType = {}): Promise<TResponse> {\n    return this.getCollectionPresets<TResponse>(params);\n  }\n\n  // #endregion bookmarks\n\n  // #region collections\n\n  /**\n   * Get all available collections\n   */\n  public getCollections(params: QueryParamsType = {}): Promise<ICollectionsResponse[]> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<ICollectionsResponse[]>(\"/collections\", params);\n  }\n\n  /**\n   * Get collection info by name\n   */\n  public getCollection(collection: string, params: QueryParamsType = {}): Promise<ICollectionResponse> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<ICollectionResponse>(`/collections/${collection}`, params);\n  }\n\n  /**\n   * Create a collection\n   */\n  public createCollection(data: ICollection): Promise<ICollectionResponse> {\n    invariant(isObject(data), \"data must be an object\");\n    return this.api.post<ICollectionResponse>(\"/collections\", data);\n  }\n\n  /**\n   * Updates a certain collection\n   */\n  public updateCollection(collection: string, data: Partial<ICollection>): Promise<ICollectionResponse> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObject(data), \"data must be an object\");\n\n    return this.api.patch<ICollectionResponse>(`/collections/${collection}`, data);\n  }\n\n  /**\n   * Deletes a certain collection\n   */\n  public deleteCollection(collection: string): Promise<void> {\n    invariant(isString(collection), \"collection must be a string\");\n\n    return this.api.delete<void>(`/collections/${collection}`);\n  }\n\n  // #endregion collections\n\n  // #region collection presets\n\n  /**\n   * Get the collection presets of the current user\n   * @see https://docs.directus.io/api/reference.html#collection-presets\n   */\n  public getCollectionPresets<TResponse extends any[] = any[]>(params: QueryParamsType = {}): Promise<TResponse> {\n    invariant(isString(this.config.token), \"defined token is not a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const payload = this.api.getPayload<{ id: string; role: string }>();\n\n    return Promise.all([\n      this.api.get(\"/collection_presets\", {\n        \"filter[title][nnull]\": 1,\n        \"filter[user][eq]\": payload.id,\n      }),\n      this.api.get(\"/collection_presets\", {\n        \"filter[role][eq]\": payload.role,\n        \"filter[title][nnull]\": 1,\n        \"filter[user][null]\": 1,\n      }),\n    ]).then((values: Array<{ data: any }>) => {\n      const [user, role] = values;\n\n      return [...(user.data || []), ...(role.data || [])] as TResponse;\n    });\n  }\n\n  /**\n   * Create a new collection preset (bookmark / listing preferences)\n   * @see https://docs.directus.io/api/reference.html#collection-presets\n   */\n  public createCollectionPreset<CollectionPreset extends ICollectionPreset>(\n    data: CollectionPreset\n  ): Promise<ICollectionPresetResponse<CollectionPreset>> {\n    invariant(isObject(data), \"data must be an object\");\n\n    return this.api.post<ICollectionPresetResponse<CollectionPreset>>(\"/collection_presets\", data);\n  }\n\n  /**\n   * Update collection preset (bookmark / listing preference)\n   * @see https://docs.directus.io/api/reference.html#collection-presets\n   */\n  // tslint:disable-next-line: max-line-length\n  public updateCollectionPreset<\n    PartialCollectionPreset extends Partial<ICollectionPreset>,\n    TResultCollectionPreset extends ICollectionPreset = ICollectionPreset\n  >(\n    primaryKey: PrimaryKeyType,\n    data: IUpdateCollectionPresetBody\n  ): Promise<ICollectionPresetResponse<PartialCollectionPreset & TResultCollectionPreset>> {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObject(data), \"data must be an object\");\n\n    return this.api.patch<ICollectionPresetResponse<PartialCollectionPreset & TResultCollectionPreset>>(\n      `/collection_presets/${primaryKey}`,\n      data\n    );\n  }\n\n  /**\n   * Delete collection preset by primarykey\n   * @see https://docs.directus.io/api/reference.html#collection-presets\n   */\n  public deleteCollectionPreset(primaryKey: PrimaryKeyType): Promise<void> {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n\n    return this.api.delete<void>(`/collection_presets/${primaryKey}`);\n  }\n\n  // #endregion collection presets\n\n  // #region extensions\n\n  /**\n   * Get the information of all installed interfaces\n   * @see https://docs.directus.io/api/reference.html#get-extensions\n   */\n  public getInterfaces<TResponse extends any[] = any[]>(): Promise<TResponse> {\n    return this.api.request<TResponse>(\"get\", \"/interfaces\", {}, {}, true);\n  }\n\n  /**\n   * Get the information of all installed layouts\n   * @see https://docs.directus.io/api/reference.html#get-extensions\n   */\n  public getLayouts<TResponse extends any[] = any[]>(): Promise<TResponse> {\n    return this.api.request<TResponse>(\"get\", \"/layouts\", {}, {}, true);\n  }\n\n  /**\n   * Get the information of all installed pages\n   * @see https://docs.directus.io/api/reference.html#get-extensions\n   */\n  public getPages<TResponse extends any[] = any[]>(): Promise<TResponse> {\n    return this.api.request<TResponse>(\"get\", \"/pages\", {}, {}, true);\n  }\n\n  // #endregion extensions\n\n  // #region fields\n\n  /**\n   * Get all fields that are in Directus\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public getAllFields<TFieldsType extends IField[]>(\n    params: QueryParamsType = {}\n  ): Promise<IFieldsResponse<TFieldsType>> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IFieldsResponse<TFieldsType>>(\"/fields\", params);\n  }\n\n  /**\n   * Get the fields that have been setup for a given collection\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public getFields<TFieldsType extends IField[]>(\n    collection: string,\n    params: QueryParamsType = {}\n  ): Promise<IFieldsResponse<TFieldsType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IFieldsResponse<TFieldsType>>(`/fields/${collection}`, params);\n  }\n\n  /**\n   * Get the field information for a single given field\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public getField<TFieldType extends IField>(\n    collection: string,\n    fieldName: string,\n    params: QueryParamsType = {}\n  ): Promise<IFieldResponse<TFieldType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isString(fieldName), \"fieldName must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IFieldResponse<TFieldType>>(`/fields/${collection}/${fieldName}`, params);\n  }\n\n  /**\n   * Create a field in the given collection\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public createField<TFieldType extends IField>(\n    collection: string,\n    fieldInfo: TFieldType\n  ): Promise<IFieldResponse<TFieldType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObject(fieldInfo), \"fieldInfo must be an object\");\n\n    return this.api.post<IFieldResponse<TFieldType>>(`/fields/${collection}`, fieldInfo);\n  }\n\n  /**\n   * Update a given field in a given collection\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public updateField<TFieldType extends Partial<IField>>(\n    collection: string,\n    fieldName: string,\n    fieldInfo: TFieldType\n  ): Promise<IFieldResponse<IField & TFieldType> | undefined> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isString(fieldName), \"fieldName must be a string\");\n    invariant(isObject(fieldInfo), \"fieldInfo must be an object\");\n\n    return this.api.patch<IFieldResponse<IField & TFieldType>>(`/fields/${collection}/${fieldName}`, fieldInfo);\n  }\n\n  /**\n   * Update multiple fields at once\n   * @see https://docs.directus.io/api/reference.html#fields-2\n   * @example\n   *\n   * // Set multiple fields to the same value\n   * updateFields(\"projects\", [\"first_name\", \"last_name\", \"email\"], {\n   *   default_value: \"\"\n   * })\n   *\n   * // Set multiple fields to different values\n   * updateFields(\"projects\", [\n   *   {\n   *     id: 14,\n   *     sort: 1\n   *   },\n   *   {\n   *     id: 17,\n   *     sort: 2\n   *   },\n   *   {\n   *     id: 912,\n   *     sort: 3\n   *   }\n   * ])\n   */\n  public updateFields<TFieldsType extends IField[]>(\n    collection: string,\n    fields: Array<Partial<IField>>\n  ): Promise<IFieldsResponse<TFieldsType & IField[]> | undefined>;\n  public updateFields<TFieldsType extends IField[]>(\n    collection: string,\n    fields: string[],\n    fieldInfo: Partial<IField>\n  ): Promise<IFieldsResponse<TFieldsType & IField[]> | undefined>;\n  public updateFields<TFieldsType extends IField[]>(\n    collection: string,\n    fieldsInfoOrFieldNames: string[] | Array<Partial<IField>>,\n    fieldInfo: Partial<IField> | null = null\n  ): Promise<IFieldsResponse<TFieldsType & IField[]> | undefined> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isArray(fieldsInfoOrFieldNames), \"fieldsInfoOrFieldNames must be an array\");\n\n    if (fieldInfo) {\n      invariant(isObject(fieldInfo), \"fieldInfo must be an object\");\n    }\n\n    if (fieldInfo) {\n      return this.api.patch(`/fields/${collection}/${fieldsInfoOrFieldNames.join(\",\")}`, fieldInfo);\n    }\n\n    return this.api.patch(`/fields/${collection}`, fieldsInfoOrFieldNames);\n  }\n\n  /**\n   * Delete a field from a collection\n   * @see @see https://docs.directus.io/api/reference.html#fields-2\n   */\n  public deleteField(collection: string, fieldName: string): Promise<void> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isString(fieldName), \"fieldName must be a string\");\n\n    return this.api.delete(`/fields/${collection}/${fieldName}`);\n  }\n\n  // #endregion fields\n\n  // #region files\n\n  /**\n   * Get a list of available files from Directus\n   * @see https://docs.directus.io/api/reference.html#files\n   */\n  public async getFiles(params: QueryParamsType = {}): Promise<IFilesResponse> {\n    invariant(isObjectOrEmpty(params), \"Params must be an object\");\n    return this.api.get(\"/files\", params);\n  }\n\n  /**\n   * Get a certain file or certain file list from Directus\n   * @see https://docs.directus.io/api/reference.html#files\n   */\n  public async getFile<TFile extends string | string[]>(\n    fileName: TFile,\n    params: QueryParamsType = {}\n  ): Promise<TFile extends string ? IFileResponse : IFilesResponse> {\n    invariant(isString(fileName), \"FileName must be string\");\n    invariant(isObjectOrEmpty(params), \"Params must be an object\");\n    const files = typeof fileName === \"string\" ? fileName : (fileName as string[]).join(\",\");\n    return this.api.get(`/files/${files}`, params);\n  }\n\n  /**\n   * Upload multipart files in multipart/form-data\n   * @see https://docs.directus.io/api/reference.html#files\n   */\n  public uploadFiles<TResponse extends any = any[]>(\n    data: object, // TODO: fix type definition\n    onUploadProgress: () => object = () => ({})\n  ): Promise<TResponse> {\n    const headers = {\n      Authorization: `Bearer ${this.config.token}`,\n      \"Content-Type\": \"multipart/form-data\",\n    };\n\n    // limit concurrent requests to 5\n    this.api.concurrent.attach(5);\n\n    return this.api.xhr\n      .post(`${this.config.url}/${this.config.project}/files`, data, {\n        headers,\n        onUploadProgress,\n      })\n      .then((res: { data: any }) => {\n        // detach concurrency manager\n        this.api.concurrent.detach();\n\n        return res.data;\n      })\n      .catch((error: IErrorResponse) => {\n        // detach concurrency manager\n        this.api.concurrent.detach();\n\n        if (error.response) {\n          throw error.response.data.error;\n        } else {\n          throw {\n            code: -1,\n            error,\n            message: \"Network Error\",\n          };\n        }\n      });\n  }\n\n  // #endregion files\n\n  // #region items\n\n  /**\n   * Update an existing item\n   * @see https://docs.directus.io/api/reference.html#update-item\n   * @typeparam TTPartialItem Defining the item type in object schema\n   * @typeparam TTResult Extension of [TPartialItem] as expected result\n   */\n  public updateItem<TTPartialItem extends object, TTResult extends object = TTPartialItem>(\n    collection: string,\n    primaryKey: PrimaryKeyType,\n    body: TTPartialItem,\n    params: QueryParamsType = {}\n  ): Promise<IItemResponse<TTPartialItem & TTResult>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObject(body), \"body must be an object\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.patch<IItemResponse<TTPartialItem & TTResult>>(`${collectionBasePath}/${primaryKey}`, body, params);\n  }\n\n  /**\n   * Update multiple items\n   * @see https://docs.directus.io/api/reference.html#update-items\n   * @typeparam TPartialItem Defining an array of items, each in object schema\n   * @typeparam TResult Extension of [TPartialItem] as expected result\n   * @return {Promise<IItemsResponse<TPartialItem & TResult>>}\n   */\n  public updateItems<TPartialItem extends object[], TResult extends TPartialItem = TPartialItem>(\n    collection: string,\n    body: TPartialItem,\n    params: QueryParamsType = {}\n  ) {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isArray(body), \"body must be an array\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.patch<IItemsResponse<TPartialItem & TResult>>(collectionBasePath, body, params);\n  }\n\n  /**\n   * Create a new item\n   * @typeparam TItemType Defining an item and its fields in object schema\n   * @return {Promise<IItemsResponse<TItemType>>}\n   */\n  public createItem<TItemType extends object>(collection: string, body: TItemType): Promise<IItemResponse<TItemType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObject(body), \"body must be an object\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.post<IItemResponse<TItemType>>(collectionBasePath, body);\n  }\n\n  /**\n   * Create multiple items\n   * @see https://docs.directus.io/api/reference.html#create-items\n   * @typeparam TItemsType Defining an array of items, each in object schema\n   */\n  public createItems<TItemsType extends Array<{}>>(\n    collection: string,\n    body: BodyType\n  ): Promise<IItemsResponse<TItemsType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isArray(body), \"body must be an array\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.post<IItemsResponse<TItemsType>>(collectionBasePath, body);\n  }\n\n  /**\n   * Get items from a given collection\n   * @see https://docs.directus.io/api/reference.html#get-multiple-items\n   * @typeparam TItemsType Defining an array of items, each in object schema\n   */\n  public getItems<TTItemsType extends Array<{}>>(\n    collection: string,\n    params: QueryParamsType = {}\n  ): Promise<IItemsResponse<TTItemsType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.get<IItemsResponse<TTItemsType>>(collectionBasePath, params);\n  }\n\n  /**\n   * Get a single item by primary key\n   * @see https://docs.directus.io/api/reference.html#get-item\n   * @typeparam TItemType Defining fields of an item in object schema\n   */\n  public getItem<TItemType extends object = {}>(\n    collection: string,\n    primaryKey: PrimaryKeyType,\n    params: QueryParamsType = {}\n  ): Promise<IItemResponse<TItemType>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.get<IItemResponse<TItemType>>(`${collectionBasePath}/${primaryKey}`, params);\n  }\n\n  /**\n   * Delete a single item by primary key\n   * @see https://docs.directus.io/api/reference.html#delete-items\n   */\n  public deleteItem(collection: string, primaryKey: PrimaryKeyType) {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.delete<void>(`${collectionBasePath}/${primaryKey}`);\n  }\n\n  /**\n   * Delete multiple items by primary key\n   * @see https://docs.directus.io/api/reference.html#delete-items\n   */\n  public deleteItems(collection: string, primaryKeys: PrimaryKeyType[]) {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isArray(primaryKeys), \"primaryKeys must be an array\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.delete<void>(`${collectionBasePath}/${primaryKeys.join()}`);\n  }\n\n  // #endregion items\n\n  // #region listing preferences\n\n  /**\n   * Get the collection presets of the current user for a single collection\n   */\n  public getMyListingPreferences<TResponse extends any[] = any[]>(\n    collection: string,\n    params: QueryParamsType = {}\n  ): Promise<TResponse> {\n    invariant(isString(this.config.token), \"token must be defined\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const payload = this.api.getPayload<{ role: string; id: string }>();\n\n    return Promise.all([\n      this.api.get<IFieldResponse<any>>(\"/collection_presets\", {\n        \"filter[collection][eq]\": collection,\n        \"filter[role][null]\": 1,\n        \"filter[title][null]\": 1,\n        \"filter[user][null]\": 1,\n        limit: 1,\n        sort: \"-id\",\n      }),\n      this.api.get<IFieldResponse<any>>(\"/collection_presets\", {\n        \"filter[collection][eq]\": collection,\n        \"filter[role][eq]\": payload.role,\n        \"filter[title][null]\": 1,\n        \"filter[user][null]\": 1,\n        limit: 1,\n        sort: \"-id\",\n      }),\n      this.api.get<IFieldResponse<any>>(\"/collection_presets\", {\n        \"filter[collection][eq]\": collection,\n        \"filter[role][eq]\": payload.role,\n        \"filter[title][null]\": 1,\n        \"filter[user][eq]\": payload.id,\n        limit: 1,\n        sort: \"-id\",\n      }),\n    ]).then((values: Array<IFieldResponse<any>>) => {\n      const [col, role, user] = values;\n\n      if (user.data && user.data.length > 0) {\n        return user.data[0] as TResponse;\n      }\n\n      if (role.data && role.data.length > 0) {\n        return role.data[0] as TResponse;\n      }\n\n      if (col.data && col.data.length > 0) {\n        return col.data[0] as TResponse;\n      }\n\n      return {} as TResponse;\n    });\n  }\n\n  // #endregion listing preferences\n\n  // #region permissions\n\n  /**\n   * Get permissions\n   * @param {QueryParamsType?} params\n   * @return {Promise<IPermission>}\n   */\n  public getPermissions(params: QueryParamsType = {}): Promise<IItemsResponse<IPermission[]>> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.getItems<IPermission[]>(\"directus_permissions\", params);\n  }\n\n  /**\n   * TODO: Fix type-def for return\n   * Get the currently logged in user's permissions\n   * @typeparam TResponse Permissions type as array extending any[]\n   */\n  public getMyPermissions<TResponse extends any[] = any[]>(params: QueryParamsType = {}): Promise<TResponse> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get(\"/permissions/me\", params);\n  }\n\n  /**\n   * TODO: Fix type-def for param and return\n   * Create multiple new permissions\n   * @typeparam TResponse Permissions type as array extending any[]\n   */\n  public createPermissions<TResponse extends any[] = any[]>(data: any[]): Promise<TResponse> {\n    invariant(isArray(data), \"data must be anarry\");\n\n    return this.api.post(\"/permissions\", data);\n  }\n\n  /**\n   * TODO: Fix type-def for param and return\n   * Update multiple permission records\n   * @typeparam TResponse Permissions type as array extending any[]\n   */\n  public updatePermissions<TResponse extends any[] = any[]>(data: any[]): Promise<TResponse> {\n    invariant(isArray(data), \"data must be anarry\");\n\n    return this.api.patch<TResponse>(\"/permissions\", data);\n  }\n\n  // #endregion permissions\n\n  // #region relations\n\n  /**\n   * Get all relationships\n   * @param {QueryParamsType?} params\n   * @return {Promise<IRelationsResponse>}\n   */\n  public getRelations(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n    return this.api.get<IRelationsResponse>(\"/relations\", params);\n  }\n\n  /**\n   * Creates new relation\n   * @param {IRelation} data\n   * @return {Promise<IRelationResponse>}\n   */\n  public createRelation(data: IRelation) {\n    return this.api.post<IRelationResponse>(\"/relations\", data);\n  }\n\n  /**\n   * Updates existing relation\n   */\n  public updateRelation(primaryKey: PrimaryKeyType, data: Partial<IRelation>) {\n    return this.api.patch<IRelationResponse>(`/relations/${primaryKey}`, data);\n  }\n\n  /**\n   * TODO: Add type-def for return value(s)\n   * Get the relationship information for the given collection\n   */\n  public getCollectionRelations(collection: string, params: QueryParamsType = {}): Promise<any[]> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return Promise.all([\n      this.api.get<any>(\"/relations\", {\n        \"filter[collection_a][eq]\": collection,\n      }),\n      this.api.get<any>(\"/relations\", {\n        \"filter[collection_b][eq]\": collection,\n      }),\n    ]);\n  }\n\n  // #endregion relations\n\n  // #region revisions\n\n  /**\n   * Get a single item's revisions by primary key\n   * @typeparam DataAndDelta  The data including delta type for the revision\n   * @param {string} collection\n   * @param {PrimaryKeyType} primaryKey\n   * @param {QueryParamsType?} params\n   */\n  public getItemRevisions<TDataAndDelta extends object = {}>(\n    collection: string,\n    primaryKey: PrimaryKeyType,\n    params: QueryParamsType = {}\n  ): Promise<IRevisionResponse<TDataAndDelta>> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.get<IRevisionResponse<TDataAndDelta>>(`${collectionBasePath}/${primaryKey}/revisions`, params);\n  }\n\n  /**\n   * Revert an item to a previous state\n   * @param {string} collection\n   * @param {PrimaryKeyType} primaryKey\n   * @param {number} revisionID\n   */\n  public revert(collection: string, primaryKey: PrimaryKeyType, revisionID: number): Promise<void> {\n    invariant(isString(collection), \"collection must be a string\");\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isNumber(revisionID), \"revisionID must be a number\");\n\n    const collectionBasePath = getCollectionItemPath(collection);\n\n    return this.api.patch(`${collectionBasePath}/${primaryKey}/revert/${revisionID}`);\n  }\n\n  // #endregion revisions\n\n  // #region roles\n\n  /**\n   * Get a single user role\n   * @param {PrimaryKeyType} primaryKey\n   * @param {QueryParamsType?} params\n   */\n  public getRole(primaryKey: PrimaryKeyType, params: QueryParamsType = {}): Promise<IRoleResponse> {\n    invariant(isNumber(primaryKey), \"primaryKey must be a number\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IRoleResponse>(`/roles/${primaryKey}`, params);\n  }\n\n  /**\n   * Get the user roles\n   * @param {QueryParamsType?} params\n   */\n  public getRoles(params: QueryParamsType = {}): Promise<IRoleResponse[]> {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IRoleResponse[]>(\"/roles\", params);\n  }\n\n  /**\n   * Update a user role\n   * @param {PrimaryKeyType} primaryKey\n   * @param {Role} body\n   */\n  public updateRole<Role extends Partial<IRole>>(primaryKey: PrimaryKeyType, body: Role) {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObject(body), \"body must be an object\");\n\n    return this.updateItem<Role, IRole>(\"directus_roles\", primaryKey, body);\n  }\n\n  /**\n   * Create a new user role\n   * @param {Role} body\n   */\n  public createRole<TRole extends IRole>(body: TRole) {\n    invariant(isObject(body), \"body must be an object\");\n\n    return this.createItem(\"directus_roles\", body);\n  }\n\n  /**\n   * Delete a user rol by primary key\n   * @param {PrimaryKeyType} primaryKey\n   */\n  public deleteRole(primaryKey: PrimaryKeyType): Promise<void> {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n\n    return this.deleteItem(\"directus_roles\", primaryKey);\n  }\n\n  // #endregion roles\n\n  // #region settings\n\n  /**\n   * Get Directus' global settings\n   * @param {QueryParamsType?} params\n   */\n  public getSettings(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<ISettingsResponse>(\"/settings\", params);\n  }\n\n  /**\n   * Get the \"fields\" for directus_settings\n   * @param {QueryParamsType?} params\n   */\n  public getSettingsFields(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IFieldsResponse>(\"/settings/fields\", params);\n  }\n\n  // #endregion settings\n\n  // #region users\n\n  /**\n   * Get a list of available users in Directus\n   * @param {QueryParamsType?} params\n   */\n  public getUsers(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IUsersResponse>(\"/users\", params);\n  }\n\n  /**\n   * Get a single Directus user\n   * @param {PrimaryKeyType} primaryKey\n   * @param {QueryParamsType?} params\n   */\n  public getUser<User extends IUser = IUser>(primaryKey: PrimaryKeyType, params: QueryParamsType = {}) {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IUserResponse<User>>(`/users/${primaryKey}`, params);\n  }\n\n  /**\n   * Get the user info of the currently logged in user\n   * @param {QueryParamsType?} params\n   */\n  public getMe<User extends IUser = IUser>(params: QueryParamsType = {}) {\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.api.get<IUserResponse<User>>(\"/users/me\", params);\n  }\n\n  /**\n   * Update a single user based on primaryKey\n   * @param {PrimaryKeyType} primaryKey\n   * @param {QueryParamsType?} params\n   */\n  public updateUser<User extends Partial<IUser>>(primaryKey: PrimaryKeyType, body: User) {\n    invariant(isNotNull(primaryKey), \"primaryKey must be defined\");\n    invariant(isObject(body), \"body must be an object\");\n\n    return this.updateItem<User, IUser>(\"directus_users\", primaryKey, body);\n  }\n\n  // #endregion users\n\n  // #region server admin\n\n  /**\n   * This will update the database of the API instance to the latest version\n   * using the migrations in the API\n   * @return {Promise<void>}\n   */\n  public updateDatabase(): Promise<void> {\n    return this.api.post(\"/update\");\n  }\n\n  /**\n   * Ping the API to check if it exists / is up and running, returns \"pong\"\n   * @return {Promise<string>}\n   */\n  public ping(): Promise<string> {\n    return this.api.request(\"get\", \"/server/ping\", {}, {}, true, {}, true);\n  }\n\n  /**\n   * Get the server info from the API\n   * @return {Promise<IServerInformationResponse>}\n   */\n  public serverInfo(): Promise<IServerInformationResponse> {\n    return this.api.request(\"get\", \"/\", {}, {}, true);\n  }\n\n  /**\n   * TODO: Add response type-def\n   * Get the server info from the project\n   * @return {Promise<any>}\n   */\n  public projectInfo(): Promise<any> {\n    return this.api.request(\"get\", \"/\");\n  }\n\n  /**\n   * TODO: Add response type-def\n   * Get all the setup third party auth providers\n   * @return {Promise<any>}\n   */\n  public getThirdPartyAuthProviders(): Promise<any> {\n    return this.api.get(\"/auth/sso\");\n  }\n\n  // #endregion server admin\n}\n","export const DIRECTUS_COLLECTION_PREFIX = \"directus_\";\n\n/**\n * Returns the correct API path for the collection. It will\n * strip the prefix @{DIRECTUS_COLLECTION_PREFIX} or will add the\n * '/items/' path as prefix if not provided. The 'substr(9)' defines\n * the length of the defined @{DIRECTUS_COLLECTION_PREFIX}.\n * @param {string} collection     The name of the collection\n * @returns {string}\n * @internal\n *\n * @example\n * getCollectionItemPath('directus_users');\n * // => '/users'\n * getCollectionItemPath('users');\n * // => '/items/users'\n */\nexport function getCollectionItemPath(collection: string): string {\n  if (collection.startsWith(DIRECTUS_COLLECTION_PREFIX)) {\n    return `/${collection.substr(9)}`;\n  }\n\n  return `/items/${collection}`;\n}\n","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import axios, { AxiosInstance } from \"axios\";\nimport * as qsStringify from \"qs/lib/stringify\";\n\nimport { Authentication, IAuthentication } from \"./Authentication\";\nimport { concurrencyManager } from \"./ConcurrencyManager\";\nimport { IConfiguration } from \"./Configuration\";\n\n// Scheme types\nimport { BodyType } from \"./schemes/http/Body\";\nimport { RequestMethod } from \"./schemes/http/Request\";\nimport { IErrorResponse } from \"./schemes/response/Error\";\n\n// Utilities\nimport { invariant } from \"./utils/invariant\";\nimport { isArrayOrEmpty, isObjectOrEmpty, isString } from \"./utils/is\";\nimport { getPayload } from \"./utils/payload\";\n\nexport interface IAPI {\n  auth: IAuthentication;\n  xhr: AxiosInstance;\n  concurrent: ReturnType<typeof concurrencyManager>;\n  reset(): void;\n  get<T extends any = any>(endpoint: string, params?: object): Promise<T>;\n  post<T extends any = any>(endpoint: string, body?: BodyType, params?: object): Promise<T>;\n  patch<T extends any = any>(endpoint: string, body?: BodyType, params?: object): Promise<T>;\n  put<T extends any = any>(endpoint: string, body?: BodyType, params?: object): Promise<T>;\n  delete<T extends any = any>(endpoint: string): Promise<T>;\n  getPayload<T extends object = object>(): T;\n  request<T extends any = any>(\n    method: RequestMethod,\n    endpoint: string,\n    params?: object,\n    data?: object,\n    noEnv?: boolean,\n    headers?: { [key: string]: string },\n    skipParseToJSON?: boolean\n  ): Promise<T>;\n}\n\n/**\n * API definition for HTTP transactions\n * @uses Authentication\n * @uses axios\n */\nexport class API implements IAPI {\n  public auth: IAuthentication;\n  public xhr = axios.create({\n    paramsSerializer: qsStringify,\n    timeout: 10 * 60 * 1000, // 10 min\n  });\n  public concurrent = concurrencyManager(this.xhr, 10);\n\n  constructor(private config: IConfiguration) {\n    this.auth = new Authentication(config, {\n      post: this.post.bind(this),\n    });\n  }\n\n  /**\n   * Resets the client instance by logging out and removing the URL and project\n   */\n  public reset(): void {\n    this.auth.logout();\n    this.config.deleteHydratedConfig();\n  }\n\n  /// REQUEST METHODS ----------------------------------------------------------\n\n  /**\n   * GET convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public get<T extends any = any>(endpoint: string, params: object = {}): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n\n    return this.request(\"get\", endpoint, params);\n  }\n\n  /**\n   * POST convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public post<T extends any = any>(endpoint: string, body: BodyType = {}, params: object = {}): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(Array.isArray(body) ? isArrayOrEmpty(body) : isObjectOrEmpty(body), \"body must be an array or object\");\n\n    return this.request<T>(\"post\", endpoint, params, body);\n  }\n\n  /**\n   * PATCH convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public patch<T extends any = any>(endpoint: string, body: BodyType = {}, params: object = {}): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(Array.isArray(body) ? isArrayOrEmpty(body) : isObjectOrEmpty(body), \"body must be an array or object\");\n\n    return this.request<T>(\"patch\", endpoint, params, body);\n  }\n\n  /**\n   * PUT convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public put<T extends any = any>(endpoint: string, body: BodyType = {}, params: object = {}): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(Array.isArray(body) ? isArrayOrEmpty(body) : isObjectOrEmpty(body), \"body must be an array or object\");\n\n    return this.request<T>(\"put\", endpoint, params, body);\n  }\n\n  /**\n   * DELETE convenience method. Calls the request method for you\n   * @typeparam T   response type\n   * @return {Promise<T>}\n   */\n  public delete<T extends any = any>(endpoint: string): Promise<T> {\n    invariant(isString(endpoint), \"endpoint must be a string\");\n\n    return this.request<T>(\"delete\", endpoint);\n  }\n\n  /**\n   * Gets the payload of the current token, return type can be generic\n   * @typeparam T   extends object, payload type\n   * @return {Promise<T>}\n   */\n  public getPayload<T extends object = object>(): T {\n    if (!isString(this.config.token)) {\n      return null;\n    }\n\n    return getPayload<T>(this.config.token);\n  }\n\n  /**\n   * Perform an API request to the Directus API\n   * @param {RequestMethod} method    Selected HTTP method\n   * @param {string} endpoint         Endpoint definition as path\n   * @param {object={}} params        Query parameters\n   * @param {object={}} data          Data passed to directus\n   * @param {boolean=false} noEnv     Do not include the `env` in the url (for system calls)\n   * @param {object={}} headers       Optional headers to include\n   * @param {boolean=false} skipParseToJSON  Whether to skip `JSON.parse` or not\n   * @typeparam T                     Response type definition, defaults to `any`\n   * @return {Promise<T>}\n   */\n  public request<T extends any = any>(\n    method: RequestMethod,\n    endpoint: string,\n    params: object = {},\n    data: object = {},\n    noEnv: boolean = false,\n    headers: { [key: string]: string } = {},\n    skipParseToJSON: boolean = false\n  ): Promise<T> {\n    invariant(isString(method), \"method must be a string\");\n    invariant(isString(endpoint), \"endpoint must be a string\");\n    invariant(isObjectOrEmpty(params), \"params must be an object or empty\");\n    invariant(isString(this.config.url), \"main url must be defined (see constructor)\");\n    invariant(Array.isArray(data) ? isArrayOrEmpty(data) : isObjectOrEmpty(data), \"data must be an array or object\");\n\n    let baseURL = `${this.config.url}/`;\n\n    if (noEnv === false) {\n      baseURL += `${this.config.project}/`;\n    }\n\n    const requestOptions = {\n      baseURL,\n      data,\n      headers,\n      method,\n      params,\n      url: endpoint,\n    };\n\n    if (this.config.token && isString(this.config.token) && this.config.token.length > 0) {\n      requestOptions.headers = headers;\n      requestOptions.headers.Authorization = `Bearer ${this.config.token}`;\n    }\n\n    return this.xhr\n      .request(requestOptions)\n      .then((res: { data: any }) => res.data)\n      .then((responseData: any) => {\n        if (!responseData || responseData.length === 0) {\n          return responseData;\n        }\n\n        if (typeof responseData !== \"object\") {\n          try {\n            return skipParseToJSON ? responseData : JSON.parse(responseData);\n          } catch (error) {\n            throw {\n              data: responseData,\n              error,\n              json: true,\n            };\n          }\n        }\n\n        return responseData as T;\n      })\n      .catch((error: IErrorResponse) => {\n        if (error.response) {\n          throw error.response.data.error;\n        } else if (error.json === true) {\n          throw {\n            code: -2,\n            data: error.data,\n            error: error.error,\n            message: \"API returned invalid JSON\",\n          };\n        } else {\n          throw {\n            code: -1,\n            error,\n            message: \"Network Error\",\n          };\n        }\n      });\n  }\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","import { IConfiguration, IConfigurationValues } from \"./Configuration\";\n\n// Other classes\nimport { IAPI } from \"./API\";\n\n// Scheme types\nimport { IAuthenticateResponse } from \"./schemes/auth/Authenticate\";\nimport { ILoginCredentials, ILoginOptions } from \"./schemes/auth/Login\";\nimport { ILoginResponse, RefreshIfNeededResponse } from \"./schemes/response/Login\";\nimport { IRefreshTokenResponse } from \"./schemes/response/Token\";\n\n// Utilities\nimport { invariant } from \"./utils/invariant\";\nimport { isFunction, isObject, isString } from \"./utils/is\";\nimport { getPayload } from \"./utils/payload\";\n\ninterface IAuthenticationRefreshError {\n  code?: number;\n  message: string;\n}\n\ninterface IAuthenticationInjectableProps {\n  post: IAPI[\"post\"];\n}\n\nexport interface IAuthentication {\n  refreshInterval?: number;\n  isLoggedIn(): boolean;\n  login(credentials: ILoginCredentials, options?: ILoginOptions): Promise<ILoginResponse>;\n  logout(): void;\n  refreshIfNeeded(): Promise<[boolean, Error?]>;\n  refresh(token: string): Promise<IRefreshTokenResponse>;\n}\n\n/**\n * Handles all authentication related logic, decoupled from the core\n * @internal\n */\nexport class Authentication implements IAuthentication {\n  /**\n   * Current set auto-refresh interval or undefined\n   * @type {number|undefined}\n   */\n  public refreshInterval?: number;\n\n  /**\n   * Optional customized error handler\n   * @internal\n   */\n  private onAutoRefreshError?: (msg: IAuthenticationRefreshError) => void;\n\n  /**\n   * Optional customized success handler\n   * @internal\n   */\n  private onAutoRefreshSuccess?: (config: IConfigurationValues) => void;\n\n  /**\n   * Creates a new authentication instance\n   * @constructor\n   * @param {IConfiguration} config\n   * @param {IAuthenticationInjectableProps} inject\n   */\n  constructor(private config: IConfiguration, private inject: IAuthenticationInjectableProps) {\n    // Only start the auto refresh interval if the token exists and it's a JWT\n    if (config.token && config.token.includes(\".\")) {\n      this.startInterval(true);\n    }\n  }\n\n  /**\n   * If the current auth status is logged in\n   * @return {boolean}\n   */\n  public isLoggedIn(): boolean {\n    if (\n      isString(this.config.token) &&\n      isString(this.config.url) &&\n      isString(this.config.project) &&\n      isObject(this.getPayload())\n    ) {\n      if (this.config.localExp > Date.now()) {\n        // Not expired, succeed\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Login to the API; Gets a new token from the API and stores it in this.token.\n   * @param {ILoginCredentials} credentials   User login credentials\n   * @param {ILoginOptions?} options          Additional options regarding persistance and co.\n   * @return {Promise<ILoginResponse>}\n   */\n  public login(credentials: ILoginCredentials, options?: ILoginOptions): Promise<ILoginResponse> {\n    invariant(isObject(credentials), \"malformed credentials\");\n    invariant(\n      isString(credentials.email) && isString(credentials.password),\n      \"email & password are required in credentials\"\n    );\n\n    this.config.token = null;\n\n    if (isString(credentials.url)) {\n      this.config.url = credentials.url;\n    }\n\n    if (isString(credentials.project)) {\n      this.config.project = credentials.project;\n    }\n\n    if (credentials.persist || (options && options.persist) || this.config.persist) {\n      // use interval for login refresh when option persist enabled\n      this.startInterval();\n    }\n\n    return new Promise((resolve, reject) => {\n      this.inject\n        .post(\"/auth/authenticate\", {\n          email: credentials.email,\n          password: credentials.password,\n        })\n        .then((res: IAuthenticateResponse) => {\n          // save new token in configuration\n          return (this.config.token = res.data.token);\n        })\n        .then((token: string) => {\n          // expiry date is the moment we got the token + 5 minutes\n          this.config.localExp = new Date(Date.now() + this.config.tokenExpirationTime).getTime();\n\n          resolve({\n            localExp: this.config.localExp,\n            project: this.config.project,\n            token,\n            url: this.config.url,\n          });\n        })\n        .catch(reject);\n    });\n  }\n\n  /**\n   * Logs the user out by \"forgetting\" the token, and clearing the refresh interval\n   */\n  public logout(): void {\n    this.config.reset();\n\n    if (this.refreshInterval) {\n      this.stopInterval();\n    }\n  }\n\n  /// REFRESH METHODS ----------------------------------------------------------\n\n  /**\n   * Refresh the token if it is about to expire (within 30 seconds of expiry date).\n   * - Calls onAutoRefreshSuccess with the new token if the refreshing is successful.\n   * - Calls onAutoRefreshError if refreshing the token fails for some reason.\n   * @return {RefreshIfNeededResponse}\n   */\n  public refreshIfNeeded(): Promise<RefreshIfNeededResponse> {\n    const payload = this.getPayload<{ exp: any }>();\n    const { token, url, project, localExp } = this.config;\n\n    if (!isString(token) || !isString(url) || !isString(project)) {\n      return;\n    }\n\n    if (!payload || !payload.exp) {\n      return;\n    }\n\n    const timeDiff = (localExp || 0) - Date.now();\n\n    if (timeDiff <= 0) {\n      // token has expired, skipping auto refresh\n      if (isFunction(this.onAutoRefreshError)) {\n        this.onAutoRefreshError({\n          code: 102,\n          message: \"auth_expired_token\",\n        });\n      }\n      return;\n    }\n\n    if (timeDiff < 30000) {\n      return new Promise<RefreshIfNeededResponse>((resolve: (res: RefreshIfNeededResponse) => any) => {\n        this.refresh(token)\n          .then((res: IRefreshTokenResponse) => {\n            this.config.localExp = new Date(Date.now() + this.config.tokenExpirationTime).getTime();\n            this.config.token = res.data.token || token;\n\n            // if autorefresh succeeded\n            if (isFunction(this.onAutoRefreshSuccess)) {\n              this.onAutoRefreshSuccess(this.config);\n            }\n\n            resolve([true]);\n          })\n          .catch((error: Error) => {\n            if (isFunction(this.onAutoRefreshError)) {\n              this.onAutoRefreshError(error);\n            }\n\n            resolve([true, error]);\n          });\n      });\n    } else {\n      Promise.resolve([false]);\n    }\n  }\n\n  /**\n   * Use the passed token to request a new one.\n   * @param {string} token\n   */\n  public refresh(token: string): Promise<IRefreshTokenResponse> {\n    invariant(isString(token), \"token must be a string\");\n\n    return this.inject.post<IRefreshTokenResponse>(\"/auth/refresh\", { token });\n  }\n\n  /**\n   * Starts an interval of 10 seconds that will check if the token needs refreshing\n   * @param {boolean?} fireImmediately    If it should immediately call [refreshIfNeeded]\n   */\n  private startInterval(fireImmediately?: boolean): void {\n    if (fireImmediately) {\n      this.refreshIfNeeded();\n    }\n\n    this.refreshInterval = setInterval(this.refreshIfNeeded.bind(this), 10000) as any;\n  }\n\n  /**\n   * Clears and nullifies the token refreshing interval\n   */\n  private stopInterval(): void {\n    clearInterval(this.refreshInterval);\n    this.refreshInterval = null;\n  }\n\n  /**\n   * Gets the payload of the current token, return type can be generic\n   * @typeparam T     The payload response type, arbitrary object\n   * @return {T}\n   */\n  private getPayload<T extends object = object>(): T {\n    if (!isString(this.config.token)) {\n      return null;\n    }\n\n    return getPayload<T>(this.config.token);\n  }\n}\n","// tslint:disable: object-literal-sort-keys\nimport { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\n\nexport interface IConcurrencyQueueItem {\n  request: AxiosRequestConfig;\n  resolver: (queuedRequest: AxiosRequestConfig) => any;\n}\n\n/**\n * Handling and limiting concurrent requests for the API.\n * @param {AxiosInstance} axios   Reference to the caller instance\n * @param {number=10} limit       When to reate-limit outgoing requests\n */\nexport const concurrencyManager = (axios: AxiosInstance, limit: number = 10) => {\n  if (limit < 1) {\n    throw new Error(\"ConcurrencyManager Error: minimun concurrent requests is 1\");\n  }\n\n  const instance = {\n    limit,\n    queue: [] as IConcurrencyQueueItem[],\n    running: [] as IConcurrencyQueueItem[],\n    interceptors: {\n      request: null,\n      response: null,\n    },\n    push(reqHandler: IConcurrencyQueueItem) {\n      instance.queue.push(reqHandler);\n      instance.shiftInitial();\n    },\n    shiftInitial(): void {\n      setTimeout(() => {\n        if (instance.running.length < instance.limit) {\n          instance.shift();\n        }\n      }, 0);\n    },\n    shift(): void {\n      if (instance.queue.length) {\n        const queued = instance.queue.shift();\n\n        queued.resolver(queued.request);\n        instance.running.push(queued);\n      }\n    },\n    // use as interceptor. Queue outgoing requests\n    requestHandler(req: AxiosRequestConfig): Promise<AxiosRequestConfig> {\n      return new Promise(resolve => {\n        instance.push({\n          request: req,\n          resolver: resolve,\n        } as IConcurrencyQueueItem);\n      });\n    },\n    // use as interceptor. Execute queued request upon receiving a response\n    responseHandler(res: AxiosResponse<any>): AxiosResponse<any> {\n      instance.running.shift();\n      instance.shift();\n\n      return res;\n    },\n    detach(): void {\n      axios.interceptors.request.eject(instance.interceptors.request);\n      axios.interceptors.response.eject(instance.interceptors.response);\n    },\n    attach(limitConcurrentRequestsTo?: number): void {\n      if (limitConcurrentRequestsTo) {\n        instance.limit = limitConcurrentRequestsTo;\n      }\n\n      // queue concurrent requests\n      instance.interceptors.request = axios.interceptors.request.use(instance.requestHandler);\n      instance.interceptors.response = axios.interceptors.response.use(\n        instance.responseHandler,\n        instance.responseHandler\n      );\n    },\n  };\n\n  return instance;\n};\n"],"sourceRoot":""}